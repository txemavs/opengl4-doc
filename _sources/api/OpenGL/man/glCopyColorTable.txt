.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:26
.. *****************************************************************************

.. following information was extracted from file 'man/glCopyColorTable.xml'
.. (c)1991-2006 Silicon Graphics, Inc.
.. See license details at http://oss.sgi.com/projects/FreeB/


.. currentmodule:: OpenGL.man

function `glCopyColorTable`
---------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 1 Vol. 3G

Copy pixels into a color table

.. c:function:: glCopyColorTable


         :param target:

                  The color table target. Must be
                  ``GL_COLOR_TABLE``\ ,
                  ``GL_POST_CONVOLUTION_COLOR_TABLE``\ ,
                  or ``GL_POST_COLOR_MATRIX_COLOR_TABLE``\ .

         :param internalformat:

                  The internal storage format of the texture image.
                  Must be one of the following symbolic constants:
                  ``GL_ALPHA``\ ,
                  ``GL_ALPHA4``\ ,
                  ``GL_ALPHA8``\ ,
                  ``GL_ALPHA12``\ ,
                  ``GL_ALPHA16``\ ,
                  ``GL_LUMINANCE``\ ,
                  ``GL_LUMINANCE4``\ ,
                  ``GL_LUMINANCE8``\ ,
                  ``GL_LUMINANCE12``\ ,
                  ``GL_LUMINANCE16``\ ,
                  ``GL_LUMINANCE_ALPHA``\ ,
                  ``GL_LUMINANCE4_ALPHA4``\ ,
                  ``GL_LUMINANCE6_ALPHA2``\ ,
                  ``GL_LUMINANCE8_ALPHA8``\ ,
                  ``GL_LUMINANCE12_ALPHA4``\ ,
                  ``GL_LUMINANCE12_ALPHA12``\ ,
                  ``GL_LUMINANCE16_ALPHA16``\ ,
                  ``GL_INTENSITY``\ ,
                  ``GL_INTENSITY4``\ ,
                  ``GL_INTENSITY8``\ ,
                  ``GL_INTENSITY12``\ ,
                  ``GL_INTENSITY16``\ ,
                  ``GL_R3_G3_B2``\ ,
                  ``GL_RGB``\ ,
                  ``GL_RGB4``\ ,
                  ``GL_RGB5``\ ,
                  ``GL_RGB8``\ ,
                  ``GL_RGB10``\ ,
                  ``GL_RGB12``\ ,
                  ``GL_RGB16``\ ,
                  ``GL_RGBA``\ ,
                  ``GL_RGBA2``\ ,
                  ``GL_RGBA4``\ ,
                  ``GL_RGB5_A1``\ ,
                  ``GL_RGBA8``\ ,
                  ``GL_RGB10_A2``\ ,
                  ``GL_RGBA12``\ , or
                  ``GL_RGBA16``\ .

         :param x:

                  The x coordinate of the lower-left corner of the pixel rectangle
                  to be transferred to the color table.

         :param y:

                  The y coordinate of the lower-left corner of the pixel rectangle
                  to be transferred to the color table.

         :param width:

                  The width of the pixel rectangle.

.. rubric:: Specification

.. c:function:: void glCopyColorTable(GLenum  target, GLenum  internalformat, GLint  x, GLint  y, GLsizei  width)
   :noindex: 


.. seealso::


            :c:func:`glColorTable`\ ,
            :c:func:`glColorTableParameter`\ ,
            :c:func:`glReadPixels`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glCopyColorTable` loads a color table with pixels from the current
``GL_READ_BUFFER`` (rather than from main memory, as is the case for
:c:func:`glColorTable`\ ).


The screen-aligned pixel rectangle with lower-left corner at (\ *x*\ ,\ *y*\ )
having width *width* and height 1
is loaded into the color table. If any pixels within
this region are outside the window that is associated with the GL
context, the values obtained for those pixels are undefined.


The pixels in the rectangle are processed just as if
:c:func:`glReadPixels` were called, with *internalformat* set to RGBA,
but processing stops after the final conversion to RGBA.


The four scale parameters and the four bias parameters that are defined
for the table are then used to scale and bias the R, G, B, and A components
of each pixel. The scale and bias parameters are set by calling
:c:func:`glColorTableParameter`\ .


Next, the R, G, B, and A values are clamped to the range
|EQUATION_1_|\ .
Each pixel is then converted to the internal format specified by
*internalformat*\ . This conversion simply maps the component values of the pixel (R, G, B,
and A) to the values included in the internal format (red, green, blue,
alpha, luminance, and intensity).  The mapping is as follows:


+---------------------------+---------------+-----------------+----------------+-----------------+---------------------+---------------------+
| :strong:`Internal Format` | :strong:`Red` | :strong:`Green` | :strong:`Blue` | :strong:`Alpha` | :strong:`Luminance` | :strong:`Intensity` |
+---------------------------+---------------+-----------------+----------------+-----------------+---------------------+---------------------+
| ``GL_ALPHA``              |               |                 |                | A               |                     |                     |
+---------------------------+---------------+-----------------+----------------+-----------------+---------------------+---------------------+
| ``GL_LUMINANCE``          |               |                 |                |                 | R                   |                     |
+---------------------------+---------------+-----------------+----------------+-----------------+---------------------+---------------------+
| ``GL_LUMINANCE_ALPHA``    |               |                 |                | A               | R                   |                     |
+---------------------------+---------------+-----------------+----------------+-----------------+---------------------+---------------------+
| ``GL_INTENSITY``          |               |                 |                |                 |                     | R                   |
+---------------------------+---------------+-----------------+----------------+-----------------+---------------------+---------------------+
| ``GL_RGB``                | R             | G               | B              |                 |                     |                     |
+---------------------------+---------------+-----------------+----------------+-----------------+---------------------+---------------------+
| ``GL_RGBA``               | R             | G               | B              | A               |                     |                     |
+---------------------------+---------------+-----------------+----------------+-----------------+---------------------+---------------------+


Finally, the red, green, blue, alpha, luminance, and/or intensity components of
the resulting pixels are stored in the color table.
They form a one-dimensional table with indices in the range
|EQUATION_2_|\ .


.. note::


   :c:func:`glCopyColorTable` is available only if ``ARB_imaging`` is returned from calling
   :c:func:`glGetString` with an argument of ``GL_EXTENSIONS``\ .


..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_ENUM`` is generated when *target* is not one of the allowable values.
* ``GL_INVALID_VALUE`` is generated if *width* is less than zero.
* ``GL_INVALID_VALUE`` is generated if *internalformat* is not one of the allowable values.
* ``GL_TABLE_TOO_LARGE`` is generated if the requested color table is too large to be supported by the implementation.
* ``GL_INVALID_OPERATION`` is generated if :c:func:`glCopyColorTable` is executed between the execution of :c:func:`glBegin` and the corresponding execution of :c:func:`glEnd`\ .


.. -----------------------------------------------------------------------------

**Associated Gets:**

* :c:func:`glGetColorTable`\ , :c:func:`glGetColorTableParameter`


.. -----------------------------------------------------------------------------

.. <foot 'glCopyColorTable'>

.. role:: mml(raw)
   :format: html

.. |EQUATION_1_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mfenced open="[" close="]"><mn>0</mn><mn>1</mn></mfenced></math>` 

.. |EQUATION_2_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mfenced open="[" close="]"><mn>0</mn><mrow><mi mathvariant="italic">width</mi><mo>-</mo><mn>1</mn></mrow></mfenced></math>` 

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )1991-2006 Silicon Graphics, Inc. SGI Free Software B License.

