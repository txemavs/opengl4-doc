.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:28
.. *****************************************************************************

.. following information was extracted from file 'man/glXImportContextEXT.xml'
.. (c)1991-2006 Silicon Graphics, Inc.
.. See license details at http://oss.sgi.com/projects/FreeB/


.. currentmodule:: OpenGL.man

function `glXImportContextEXT`
------------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 1 Vol. 3G

Import another process's indirect rendering context.

.. c:function:: glXImportContextEXT


         :param dpy:

                  Specifies the connection to the X server.

         :param contextID:

                  Specifies a GLX rendering context.

.. rubric:: Specification

.. c:function:: GLXContext glXImportContextEXT(Display *  dpy, GLXContextID  contextID)
   :noindex: 


.. seealso::


            :c:func:`glXCreateContext`\ ,
            :c:func:`glXQueryVersion`\ ,
            :c:func:`glXQueryExtensionsString`\ ,
            :c:func:`glXGetContextIDEXT`\ ,
            :c:func:`glXFreeContextEXT`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glXImportContextEXT` creates a GLXContext given the XID of an existing GLXContext.
It may be used in place of :c:func:`glXCreateContext`\ ,
to share another process's indirect rendering context.


Only the server-side context information can be shared between
X clients; client-side state, such as pixel storage modes,
cannot be shared. Thus, :c:func:`glXImportContextEXT` must allocate memory to store
client-side information. This memory is freed by calling
:c:func:`glXFreeContextEXT`\ .


This call does not create a new XID.  It merely makes an
existing object available to the importing client (Display \*).
Like any XID, it goes away when the creating client drops its
connection or the ID is explicitly deleted. Note that this is
when the XID goes away. The object goes away when the XID
goes away AND the context is not current to any thread.


If *contextID* refers to a
direct rendering context then no error is generated but
:c:func:`glXImportContextEXT` returns NULL.


:c:func:`glXImportContextEXT` is part of the ``EXT_import_context`` extension,
not part of the core GLX command set. If _glxextstring(EXT_import_context)
is included in the string returned by :c:func:`glXQueryExtensionsString`\ ,
when called with argument ``GLX_EXTENSIONS``\ ,
extension ``EXT_import_context`` is supported.


.. -----------------------------------------------------------------------------

**Errors:**

* ``GLXBadContext`` is generated if *contextID* does not refer to a valid context.


.. -----------------------------------------------------------------------------

.. <foot 'glXImportContextEXT'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )1991-2006 Silicon Graphics, Inc. SGI Free Software B License.

