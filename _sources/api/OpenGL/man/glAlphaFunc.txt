.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:26
.. *****************************************************************************

.. following information was extracted from file 'man/glAlphaFunc.xml'
.. (c)1991-2006 Silicon Graphics, Inc.
.. See license details at http://oss.sgi.com/projects/FreeB/


.. currentmodule:: OpenGL.man

function `glAlphaFunc`
----------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 1 Vol. 3G

Specify the alpha test function

.. c:function:: glAlphaFunc


         :param func:

                  Specifies the alpha comparison function.
                  Symbolic constants
                  ``GL_NEVER``\ ,
                  ``GL_LESS``\ ,
                  ``GL_EQUAL``\ ,
                  ``GL_LEQUAL``\ ,
                  ``GL_GREATER``\ ,
                  ``GL_NOTEQUAL``\ ,
                  ``GL_GEQUAL``\ , and
                  ``GL_ALWAYS`` are accepted. The initial value is ``GL_ALWAYS``\ .

         :param ref:

                  Specifies the reference value that incoming alpha values are compared to.
                  This value is clamped to the range
                  |EQUATION_1_|\ ,
                  where 0 represents the lowest possible alpha value
                  and 1 the highest possible value.
                  The initial reference value is 0.

.. rubric:: Specification

.. c:function:: void glAlphaFunc(GLenum  func, GLclampf  ref)
   :noindex: 


.. seealso::


            :c:func:`glBlendFunc`\ ,
            :c:func:`glClear`\ ,
            :c:func:`glDepthFunc`\ ,
            :c:func:`glEnable`\ ,
            :c:func:`glStencilFunc`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


The alpha test discards fragments depending on the outcome of a comparison
between an incoming fragment's alpha value and a constant reference value.
:c:func:`glAlphaFunc` specifies the reference value and the comparison function.
The comparison is performed only if alpha testing is enabled. By
default, it is not enabled.
(See
:c:func:`glEnable` and :c:func:`glDisable` of ``GL_ALPHA_TEST``\ .)


*func* and *ref* specify the conditions under which
the pixel is drawn.
The incoming alpha value is compared to *ref*
using the function specified by *func*\ .
If the value passes the comparison,
the incoming fragment is drawn
if it also passes subsequent stencil and depth buffer tests.
If the value fails the comparison,
no change is made to the frame buffer at that pixel location. The
comparison functions are as follows:


         ``GL_NEVER``


               Never passes.


         ``GL_LESS``


               Passes if the incoming alpha value is less than the reference value.


         ``GL_EQUAL``


               Passes if the incoming alpha value is equal to the reference value.


         ``GL_LEQUAL``


               Passes if the incoming alpha value is less than or equal to the reference value.


         ``GL_GREATER``


               Passes if the incoming alpha value is greater than the reference value.


         ``GL_NOTEQUAL``


               Passes if the incoming alpha value is not equal to the reference value.


         ``GL_GEQUAL``


               Passes if the incoming alpha value is greater than or equal to
               the reference value.


         ``GL_ALWAYS``


               Always passes (initial value).


:c:func:`glAlphaFunc` operates on all pixel write operations,
including those resulting from the scan conversion of points,
lines,
polygons,
and bitmaps,
and from pixel draw and copy operations.
:c:func:`glAlphaFunc` does not affect screen clear operations.


.. note::


   Alpha testing is performed only in RGBA mode.


..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_ENUM`` is generated if *func* is not an accepted value.
* ``GL_INVALID_OPERATION`` is generated if :c:func:`glAlphaFunc` is executed between the execution of :c:func:`glBegin` and the corresponding execution of :c:func:`glEnd`\ .


.. -----------------------------------------------------------------------------

**Associated Gets:**

* :c:func:`glGet` with argument ``GL_ALPHA_TEST_FUNC``
* :c:func:`glGet` with argument ``GL_ALPHA_TEST_REF``
* :c:func:`glIsEnabled` with argument ``GL_ALPHA_TEST``


.. -----------------------------------------------------------------------------

.. <foot 'glAlphaFunc'>

.. role:: mml(raw)
   :format: html

.. |EQUATION_1_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mfenced open="[" close="]"><mn>0</mn><mn>1</mn></mfenced></math>` 

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )1991-2006 Silicon Graphics, Inc. SGI Free Software B License.

