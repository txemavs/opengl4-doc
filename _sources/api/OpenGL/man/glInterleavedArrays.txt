.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:27
.. *****************************************************************************

.. following information was extracted from file 'man/glInterleavedArrays.xml'
.. (c)1991-2006 Silicon Graphics, Inc.
.. See license details at http://oss.sgi.com/projects/FreeB/


.. currentmodule:: OpenGL.man

function `glInterleavedArrays`
------------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 1 Vol. 3G

Simultaneously specify and enable several interleaved arrays

.. c:function:: glInterleavedArrays


         :param format:

                  Specifies the type of array to enable. Symbolic constants
                  ``GL_V2F``\ ,
                  ``GL_V3F``\ ,
                  ``GL_C4UB_V2F``\ ,
                  ``GL_C4UB_V3F``\ ,
                  ``GL_C3F_V3F``\ ,
                  ``GL_N3F_V3F``\ ,
                  ``GL_C4F_N3F_V3F``\ ,
                  ``GL_T2F_V3F``\ ,
                  ``GL_T4F_V4F``\ ,
                  ``GL_T2F_C4UB_V3F``\ ,
                  ``GL_T2F_C3F_V3F``\ ,
                  ``GL_T2F_N3F_V3F``\ ,
                  ``GL_T2F_C4F_N3F_V3F``\ ,
                  and
                  ``GL_T4F_C4F_N3F_V4F``
                  are accepted.

         :param stride:

                  Specifies the offset in bytes between each aggregate array element.

.. rubric:: Specification

.. c:function:: void glInterleavedArrays(GLenum  format, GLsizei  stride, const GLvoid *  pointer)
   :noindex: 


.. seealso::


            :c:func:`glArrayElement`\ ,
            :c:func:`glClientActiveTexture`\ ,
            :c:func:`glColorPointer`\ ,
            :c:func:`glDrawArrays`\ ,
            :c:func:`glDrawElements`\ ,
            :c:func:`glEdgeFlagPointer`\ ,
            :c:func:`glEnableClientState`\ ,
            :c:func:`glGetPointerv`\ ,
            :c:func:`glIndexPointer`\ ,
            :c:func:`glNormalPointer`\ ,
            :c:func:`glSecondaryColorPointer`\ ,
            :c:func:`glTexCoordPointer`\ ,
            :c:func:`glVertexPointer`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glInterleavedArrays` lets you specify and enable individual color,
normal,
texture and vertex
arrays whose elements are part of a larger aggregate array element.
For some implementations, this is more efficient than specifying the arrays
separately.


If *stride* is 0, the aggregate elements are stored consecutively.
Otherwise, *stride* bytes occur between the beginning of one
aggregate array element and the beginning of the next aggregate array
element.


*format* serves as a "key"
describing the extraction of individual arrays from the aggregate array.
If *format* contains a T, then texture coordinates are
extracted from the interleaved array.  If C is present, color values
are extracted. If N is present, normal coordinates are extracted.
Vertex coordinates are always extracted.


The digits 2, 3, and 4 denote how many values are extracted.
F indicates that values are extracted as floating-point values.
Colors may also be extracted as 4 unsigned bytes if 4UB follows the
C.  If a color is extracted as 4 unsigned bytes, the vertex
array element which follows is located at the first possible
floating-point aligned address.


.. note::


   :c:func:`glInterleavedArrays` is available only if the GL version is 1.1 or greater.


   If :c:func:`glInterleavedArrays` is called while compiling a display list, it is not
   compiled into the list, and it is executed immediately.


   Execution of :c:func:`glInterleavedArrays` is not allowed between the execution of
   :c:func:`glBegin` and the corresponding execution of :c:func:`glEnd`\ ,
   but an error may or may not be generated. If no error is generated,
   the operation is undefined.


   :c:func:`glInterleavedArrays` is typically implemented on the client side.


   Vertex array parameters are client-side state and are therefore not
   saved or restored by :c:func:`glPushAttrib` and :c:func:`glPopAttrib`\ .
   Use :c:func:`glPushClientAttrib` and :c:func:`glPopClientAttrib` instead.


   For OpenGL versions 1.3 and greater, or when the ``ARB_multitexture`` extension is supported, :c:func:`glInterleavedArrays`
   only updates the texture coordinate array for the client active texture
   unit. The texture coordinate state for other client texture units is not
   updated, regardless of whether the client texture unit is enabled or not.


   Secondary color values are not supported in interleaved vertex array formats.


..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_ENUM`` is generated if *format* is not an accepted value.
* ``GL_INVALID_VALUE`` is generated if *stride* is negative.


.. -----------------------------------------------------------------------------

.. <foot 'glInterleavedArrays'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )1991-2006 Silicon Graphics, Inc. SGI Free Software B License.

