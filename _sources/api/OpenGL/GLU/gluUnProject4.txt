.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `gluUnProject4`
------------------------

.. source file man/gluUnProject4

.. currentmodule:: OpenGL.GLU

Map window and clip coordinates to object coordinates

.. c:function:: gluUnProject4
.. c:function:: GLint gluUnProject4(GLdouble  winX, GLdouble  winY, GLdouble  winZ, GLdouble  clipW, const GLdouble *  model, const GLdouble *  proj, const GLint *  view, GLdouble  nearVal, GLdouble  farVal, GLdouble*  objX, GLdouble*  objY, GLdouble*  objZ, GLdouble*  objW)
   :noindex: 


   
   :param winX:
      Specify the window coordinates to be mapped.
   
   :param clipW:
      Specify the clip w coordinate to be mapped.
   
   :param model:
      Specifies the modelview matrix (as from a :c:func:`glGetDoublev` call).
   
   :param proj:
      Specifies the projection matrix (as from a :c:func:`glGetDoublev` call).
   
   :param view:
      Specifies the viewport (as from a :c:func:`glGetIntegerv` call).
   
   :param nearVal:
      Specifies the near and far planes (as from a :c:func:`glGetDoublev` call).
   
   :param objX:
      Returns the computed object coordinates.
   

.. seealso::

   
   :c:func:`gluProject`, :c:func:`gluUnProject`, :c:func:`glFeedbackBuffer`, :c:func:`glGet`
   
.. rubric:: Description


:c:func:`gluUnProject4` maps the specified window coordinatesi: *winX* , *winY* , and *winZ* and its clip w coordinate *clipW* into object coordinates |EQUATION_1_| using *model* , *proj* , and *view* . *clipW* can be other than 1 as for vertices in :c:func:`glFeedbackBuffer` when data type ``GLU_4D_COLOR_TEXTURE`` is returned. This also handles the case where the *nearVal* and *farVal* planes are different from the default, 0 and 1, respectively. A return value of ``GLU_TRUE`` indicates success; a return value of ``GLU_FALSE`` indicates failure.

To compute the coordinates |EQUATION_2_| , :c:func:`gluUnProject4` multiplies the normalized device coordinates by the inverse of *model* * *proj* as follows:

|EQUATION_3_|

|EQUATION_4_| denotes matrix inversion.

:c:func:`gluUnProject4` is equivalent to :c:func:`gluUnProject` when *clipW* is 1, *nearVal* is 0, and *farVal* is 1.




.. note::

   * :c:func:`gluUnProject4` is available only if the GLU version is 1.3 or greater.



.. role:: mml(raw)
   :format: html



.. |EQUATION_1_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mfenced open="(" close=")"> <mi mathvariant="italic">objX</mi> <mi mathvariant="italic">objY</mi> <mi mathvariant="italic">objZ</mi> <mi mathvariant="italic">objW</mi> </mfenced> </math>` 

.. |EQUATION_2_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mfenced open="(" close=")"> <mi mathvariant="italic">objX</mi> <mi mathvariant="italic">objY</mi> <mi mathvariant="italic">objZ</mi> <mi mathvariant="italic">objW</mi> </mfenced> </math>` 

.. |EQUATION_3_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <mfenced open="(" close=")"> <mtable> <mtr><mtd> <mi mathvariant="italic">objX</mi> </mtd></mtr> <mtr><mtd> <mi mathvariant="italic">objY</mi> </mtd></mtr> <mtr><mtd> <mi mathvariant="italic">objZ</mi> </mtd></mtr> <mtr><mtd> <mi mathvariant="italic">objW</mi> </mtd></mtr> </mtable> </mfenced> <mo>=</mo> <mrow> <mrow> <mi mathvariant="italic">INV</mi> <mo>&af;</mo> <mfenced open="(" close=")"> <mrow> <mi mathvariant="italic">P</mi> <mo>&it;</mo> <mi mathvariant="italic">M</mi> </mrow> </mfenced> </mrow> <mo>&it;</mo> <mfenced open="(" close=")"> <mtable> <mtr><mtd> <mrow> <mfrac> <mfenced open="" close=""> <mrow> <mn>2</mn> <mo>&af;</mo> <mfenced open="(" close=")"> <mrow> <mi mathvariant="italic">winX</mi> <mo>-</mo> <mrow> <mi mathvariant="italic">view</mi> <mo>&af;</mo> <mfenced open="[" close="]"> <mn>0</mn> </mfenced> </mrow> </mrow> </mfenced> </mrow> </mfenced> <mfenced open="" close=""> <mrow> <mi mathvariant="italic">view</mi> <mo>&af;</mo> <mfenced open="[" close="]"> <mn>2</mn> </mfenced> </mrow> </mfenced> </mfrac> <mo>-</mo> <mn>1</mn> </mrow> </mtd></mtr> <mtr><mtd> <mrow> <mfrac> <mfenced open="" close=""> <mrow> <mn>2</mn> <mo>&af;</mo> <mfenced open="(" close=")"> <mrow> <mi mathvariant="italic">winY</mi> <mo>-</mo> <mrow> <mi mathvariant="italic">view</mi> <mo>&af;</mo> <mfenced open="[" close="]"> <mn>1</mn> </mfenced> </mrow> </mrow> </mfenced> </mrow> </mfenced> <mfenced open="" close=""> <mrow> <mi mathvariant="italic">view</mi> <mo>&af;</mo> <mfenced open="[" close="]"> <mn>3</mn> </mfenced> </mrow> </mfenced> </mfrac> <mo>-</mo> <mn>1</mn> </mrow> </mtd></mtr> <mtr><mtd> <mrow> <mfrac> <mfenced open="" close=""> <mrow> <mn>2</mn> <mo>&af;</mo> <mfenced open="(" close=")"> <mrow> <mi mathvariant="italic">winZ</mi> <mo>-</mo> <mi mathvariant="italic">nearVal</mi> </mrow> </mfenced> </mrow> </mfenced> <mfenced open="" close=""> <mfenced open="(" close=")"> <mrow> <mi mathvariant="italic">farVal</mi> <mo>-</mo> <mi mathvariant="italic">nearVal</mi> </mrow> </mfenced> </mfenced> </mfrac> <mo>-</mo> <mn>1</mn> </mrow> </mtd></mtr> <mtr><mtd> <mi mathvariant="italic">clipW</mi> </mtd></mtr> </mtable> </mfenced> </mrow> </mrow> </math>` 

.. |EQUATION_4_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">INV</mi></math>` 

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

