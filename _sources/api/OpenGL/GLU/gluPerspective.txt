.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `gluPerspective`
-------------------------

.. source file man/gluPerspective

.. currentmodule:: OpenGL.GLU

Set up a perspective projection matrix

.. c:function:: gluPerspective
.. c:function:: void gluPerspective(GLdouble  fovy, GLdouble  aspect, GLdouble  zNear, GLdouble  zFar)
   :noindex: 


   
   :param fovy:
      Specifies the field of view angle, in degrees, in the *`y`* direction.
   
   :param aspect:
      Specifies the aspect ratio that determines the field of view in the *`x`* direction. The aspect ratio is the ratio of *`x`* (width) to *`y`* (height).
   
   :param zNear:
      Specifies the distance from the viewer to the near clipping plane (always positive).
   
   :param zFar:
      Specifies the distance from the viewer to the far clipping plane (always positive).
   

.. seealso::

   
   :c:func:`gluOrtho2D`, :c:func:`glFrustum`, :c:func:`glLoadIdentity`, :c:func:`glMultMatrix`
   
.. rubric:: Description


:c:func:`gluPerspective` specifies a viewing frustum into the world coordinate system. In general, the aspect ratio in :c:func:`gluPerspective` should match the aspect ratio of the associated viewport. For example, |EQUATION_1_| means the viewer's angle of view is twice as wide in *`x`* as it is in *`y`* . If the viewport is twice as wide as it is tall, it displays the image without distortion.

The matrix generated by :c:func:`gluPerspective` is multipled by the current matrix, just as if :c:func:`glMultMatrix` were called with the generated matrix. To load the perspective matrix onto the current matrix stack instead, precede the call to :c:func:`gluPerspective` with a call to :c:func:`glLoadIdentity`.

Given *`f`* defined as follows:

|EQUATION_2_| The generated matrix is

|EQUATION_3_|




.. note::

   * Depth buffer precision is affected by the values specified for *zNear* and *zFar* . The greater the ratio of *zFar* to *zNear* is, the less effective the depth buffer will be at distinguishing between surfaces that are near each other. If
   * |EQUATION_4_|
   * roughly |EQUATION_5_| bits of depth buffer precision are lost. Because |EQUATION_6_| approaches infinity as *zNear* approaches 0, *zNear* must never be set to 0.



.. role:: mml(raw)
   :format: html



.. |EQUATION_1_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <mi mathvariant="italic">aspect</mi> <mo>=</mo> <mn>2.0</mn> </mrow> </math>` 

.. |EQUATION_2_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <mi mathvariant="italic">f</mi> <mo>=</mo> <mrow> <mi mathvariant="italic">cotangent</mi> <mo>&af;</mo> <mfenced open="(" close=")"> <mfrac> <mi mathvariant="italic">fovy</mi> <mn>2</mn> </mfrac> </mfenced> </mrow> </mrow> </math>` 

.. |EQUATION_3_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mfenced open="(" close=")"> <mtable> <mtr> <mtd> <mfrac> <mi mathvariant="italic">f</mi> <mi mathvariant="italic">aspect</mi> </mfrac> </mtd> <mtd> <mn>0</mn> </mtd> <mtd> <mn>0</mn> </mtd> <mtd> <mn>0</mn> </mtd> </mtr> <mtr> <mtd> <mn>0</mn> </mtd> <mtd> <mi mathvariant="italic">f</mi> </mtd> <mtd> <mn>0</mn> </mtd> <mtd> <mn>0</mn> </mtd> </mtr> <mtr> <mtd> <mn>0</mn> </mtd> <mtd> <mn>0</mn> </mtd> <mtd> <mfrac> <mfenced open="" close=""> <mrow> <mi mathvariant="italic">zFar</mi> <mo>+</mo> <mi mathvariant="italic">zNear</mi> </mrow> </mfenced> <mfenced open="" close=""> <mrow> <mi mathvariant="italic">zNear</mi> <mo>-</mo> <mi mathvariant="italic">zFar</mi> </mrow> </mfenced> </mfrac> </mtd> <mtd> <mfrac> <mfenced open="" close=""> <mrow> <mn>2</mn> <mo>&times;</mo> <mi mathvariant="italic">zFar</mi> <mo>&times;</mo> <mi mathvariant="italic">zNear</mi> </mrow> </mfenced> <mfenced open="" close=""> <mrow> <mi mathvariant="italic">zNear</mi> <mo>-</mo> <mi mathvariant="italic">zFar</mi> </mrow> </mfenced> </mfrac> </mtd> </mtr> <mtr> <mtd> <mn>0</mn> </mtd> <mtd> <mn>0</mn> </mtd> <mtd> <mn>-1</mn> </mtd> <mtd> <mn>0</mn> </mtd> </mtr> </mtable> </mfenced> </math>` 

.. |EQUATION_4_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <mi mathvariant="italic">r</mi> <mo>=</mo> <mfrac> <mi mathvariant="italic">zFar</mi> <mi mathvariant="italic">zNear</mi> </mfrac> </mrow> </math>` 

.. |EQUATION_5_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <msub><mi mathvariant="italic">log</mi> <mn>2</mn> </msub> <mo>&af;</mo> <mfenced open="(" close=")"> <mi mathvariant="italic">r</mi> </mfenced> </mrow> </math>` 

.. |EQUATION_6_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

