.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `gluPwlCurve`
----------------------

.. source file man/gluPwlCurve

.. currentmodule:: OpenGL.GLU

Describe a piecewise linear NURBS trimming curve

.. c:function:: gluPwlCurve
.. c:function:: void gluPwlCurve(GLUnurbs*  nurb, GLint  count, GLfloat*  data, GLint  stride, GLenum  type)
   :noindex: 


   
   :param nurb:
      Specifies the NURBS object (created with :c:func:`gluNewNurbsRenderer`).
   
   :param count:
      Specifies the number of points on the curve.
   
   :param data:
      Specifies an array containing the curve points.
   
   :param stride:
      Specifies the offset (a number of single-precision floating-point values) between points on the curve.
   
   :param type:
      Specifies the type of curve. Must be either ``GLU_MAP1_TRIM_2`` or ``GLU_MAP1_TRIM_3``.
   

.. seealso::

   
   :c:func:`gluBeginCurve`, :c:func:`gluBeginTrim`, :c:func:`gluNewNurbsRenderer`, :c:func:`gluNurbsCurve`
   
.. rubric:: Description


:c:func:`gluPwlCurve` describes a piecewise linear trimming curve for a NURBS surface. A piecewise linear curve consists of a list of coordinates of points in the parameter space for the NURBS surface to be trimmed. These points are connected with line segments to form a curve. If the curve is an approximation to a curve that is not piecewise linear, the points should be close enough in parameter space that the resulting path appears curved at the resolution used in the application.

If *type* is ``GLU_MAP1_TRIM_2``, then it describes a curve in two-dimensional ( *`u`* and *`v`* ) parameter space. If it is ``GLU_MAP1_TRIM_3``, then it describes a curve in two-dimensional homogeneous ( *`u`* , *`v`* , and *`w`* ) parameter space. See the :c:func:`gluBeginTrim` reference page for more information about trimming curves.




.. note::

   * To describe a trim curve that closely follows the contours of a NURBS surface, call :c:func:`gluNurbsCurve`.



.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

