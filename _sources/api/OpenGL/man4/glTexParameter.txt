.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:30
.. *****************************************************************************

.. following information was extracted from file 'man4/glTexParameter.xml'
.. (c)1991-2006 Silicon Graphics, Inc.
.. See license details at http://oss.sgi.com/projects/FreeB/


.. currentmodule:: OpenGL.man4

function `glTexParameter`
-------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Set texture parameters

.. c:function:: glTexParameter


         :param target:

                  Specifies the target texture,
                  which must be either ``GL_TEXTURE_1D``\ , ``GL_TEXTURE_2D``\ ,
                  ``GL_TEXTURE_3D``\ , ``GL_TEXTURE_1D_ARRAY``\ ,
                  ``GL_TEXTURE_2D_ARRAY``\ , ``GL_TEXTURE_RECTANGLE``\ ,
                  or ``GL_TEXTURE_CUBE_MAP``\ .

         :param pname:

                  Specifies the symbolic name of a single-valued texture parameter.
                  *pname* can be one of the following:
                  ``GL_TEXTURE_BASE_LEVEL``\ ,
                  ``GL_TEXTURE_COMPARE_FUNC``\ ,
                  ``GL_TEXTURE_COMPARE_MODE``\ ,
                  ``GL_TEXTURE_LOD_BIAS``\ ,
                  ``GL_TEXTURE_MIN_FILTER``\ ,
                  ``GL_TEXTURE_MAG_FILTER``\ ,
                  ``GL_TEXTURE_MIN_LOD``\ ,
                  ``GL_TEXTURE_MAX_LOD``\ ,
                  ``GL_TEXTURE_MAX_LEVEL``\ ,
                  ``GL_TEXTURE_SWIZZLE_R``\ ,
                  ``GL_TEXTURE_SWIZZLE_G``\ ,
                  ``GL_TEXTURE_SWIZZLE_B``\ ,
                  ``GL_TEXTURE_SWIZZLE_A``\ ,
                  ``GL_TEXTURE_WRAP_S``\ ,
                  ``GL_TEXTURE_WRAP_T``\ , or
                  ``GL_TEXTURE_WRAP_R``\ .

         :param param:

                  Specifies the value of *pname*\ .

.. rubric:: Specification

.. c:function:: void glTexParameterf(GLenum  target, GLenum  pname, GLfloat  param, GLenum  target, GLenum  pname, GLint  param)
.. c:function:: void glTexParameterfv(GLenum  target, GLenum  pname, const GLfloat *  params, GLenum  target, GLenum  pname, const GLint *  params, GLenum  target, GLenum  pname, const GLint *  params, GLenum  target, GLenum  pname, const GLuint *  params)


.. seealso::


            :c:func:`glActiveTexture`\ ,
            :c:func:`glBindTexture`\ ,
            :c:func:`glCopyTexImage1D`\ ,
            :c:func:`glCopyTexImage2D`\ ,
            :c:func:`glCopyTexSubImage1D`\ ,
            :c:func:`glCopyTexSubImage2D`\ ,
            :c:func:`glCopyTexSubImage3D`\ ,
            :c:func:`glPixelStore`\ ,
            :c:func:`glSamplerParameter`\ ,
            :c:func:`glTexImage1D`\ ,
            :c:func:`glTexImage2D`\ ,
            :c:func:`glTexImage3D`\ ,
            :c:func:`glTexSubImage1D`\ ,
            :c:func:`glTexSubImage2D`\ ,
            :c:func:`glTexSubImage3D`


..


.. -----------------------------------------------------------------------------

.. rubric:: Parameters

..


      *target*


            Specifies the target texture,
            which must be either ``GL_TEXTURE_1D``\ , ``GL_TEXTURE_2D``\ ,
            ``GL_TEXTURE_3D``\ , ``GL_TEXTURE_1D_ARRAY``\ ,
            ``GL_TEXTURE_2D_ARRAY``\ , ``GL_TEXTURE_RECTANGLE``\ ,
            or ``GL_TEXTURE_CUBE_MAP``\ .


      *pname*


            Specifies the symbolic name of a texture parameter.
            *pname* can be one of the following:
            ``GL_TEXTURE_BASE_LEVEL``\ ,
            ``GL_TEXTURE_BORDER_COLOR``\ ,
            ``GL_TEXTURE_COMPARE_FUNC``\ ,
            ``GL_TEXTURE_COMPARE_MODE``\ ,
            ``GL_TEXTURE_LOD_BIAS``\ ,
            ``GL_TEXTURE_MIN_FILTER``\ ,
            ``GL_TEXTURE_MAG_FILTER``\ ,
            ``GL_TEXTURE_MIN_LOD``\ ,
            ``GL_TEXTURE_MAX_LOD``\ ,
            ``GL_TEXTURE_MAX_LEVEL``\ ,
            ``GL_TEXTURE_SWIZZLE_R``\ ,
            ``GL_TEXTURE_SWIZZLE_G``\ ,
            ``GL_TEXTURE_SWIZZLE_B``\ ,
            ``GL_TEXTURE_SWIZZLE_A``\ ,
            ``GL_TEXTURE_SWIZZLE_RGBA``\ ,
            ``GL_TEXTURE_WRAP_S``\ ,
            ``GL_TEXTURE_WRAP_T``\ , or
            ``GL_TEXTURE_WRAP_R``\ .


      *params*


            Specifies a pointer to an array where the value or values of *pname*
            are stored.


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glTexParameter` assigns the value or values in *params* to the texture parameter
specified as *pname*\ .
*target* defines the target texture,
either ``GL_TEXTURE_1D``\ , ``GL_TEXTURE_2D``\ , ``GL_TEXTURE_1D_ARRAY``\ ,
``GL_TEXTURE_2D_ARRAY``\ , ``GL_TEXTURE_RECTANGLE``\ , or ``GL_TEXTURE_3D``\ .
The following symbols are accepted in *pname* :


         ``GL_TEXTURE_BASE_LEVEL``


               Specifies the index of the lowest defined mipmap level. This is an
               integer value. The initial value is 0.


         ``GL_TEXTURE_BORDER_COLOR``


               The data in *params* specifies four values that define the border values that
               should be used for border texels. If a texel is sampled from the border of the texture, the
               values of ``GL_TEXTURE_BORDER_COLOR`` are interpreted as an RGBA color to match the
               texture's internal format and substituted for the non-existent texel data. If the texture contains depth
               components, the first component of ``GL_TEXTURE_BORDER_COLOR`` is interpreted as a depth value.
               The initial value is |EQUATION_1_|\ .


               If the values for ``GL_TEXTURE_BORDER_COLOR`` are specified with :c:func:`glTexParameterIiv`
               or :c:func:`glTexParameterIuiv`\ , the values are stored unmodified with an internal data type of
               integer. If specified with :c:func:`glTexParameteriv`\ , they are converted to floating point with the following
               equation: |EQUATION_2_|\ .
               If specified with :c:func:`glTexParameterfv`\ , they are stored unmodified as floating-point values.


         ``GL_TEXTURE_COMPARE_FUNC``


               Specifies the comparison operator used when ``GL_TEXTURE_COMPARE_MODE`` is
               set to ``GL_COMPARE_REF_TO_TEXTURE``\ .  Permissible values are:

                  +---------------------------------------+---------------------------+
                  | :strong:`Texture Comparison Function` | :strong:`Computed result` |
                  +---------------------------------------+---------------------------+
                  | ``GL_LEQUAL``                         | |EQUATION_3_|             |
                  +---------------------------------------+---------------------------+
                  | ``GL_GEQUAL``                         | |EQUATION_4_|             |
                  +---------------------------------------+---------------------------+
                  | ``GL_LESS``                           | |EQUATION_5_|             |
                  +---------------------------------------+---------------------------+
                  | ``GL_GREATER``                        | |EQUATION_6_|             |
                  +---------------------------------------+---------------------------+
                  | ``GL_EQUAL``                          | |EQUATION_7_|             |
                  +---------------------------------------+---------------------------+
                  | ``GL_NOTEQUAL``                       | |EQUATION_8_|             |
                  +---------------------------------------+---------------------------+
                  | ``GL_ALWAYS``                         | |EQUATION_9_|             |
                  +---------------------------------------+---------------------------+
                  | ``GL_NEVER``                          | |EQUATION_10_|            |
                  +---------------------------------------+---------------------------+

                  where |EQUATION_11_| is the current interpolated texture coordinate, and |EQUATION_12_| is the depth texture value sampled from the currently bound depth texture. |EQUATION_13_| is assigned to the the red channel.


         ``GL_TEXTURE_COMPARE_MODE``


               Specifies the texture comparison mode for currently bound depth textures.
               That is, a texture whose internal format is ``GL_DEPTH_COMPONENT_\*``\ ; see
               :c:func:`glTexImage2D`\ )
               Permissible values are:


                     ``GL_COMPARE_REF_TO_TEXTURE``


                           Specifies that the interpolated and clamped
                           |EQUATION_14_| texture coordinate should
                           be compared to the value in the currently bound depth texture.  See the
                           discussion of ``GL_TEXTURE_COMPARE_FUNC`` for details of how the comparison
                           is evaluated.  The result of the comparison is assigned to the red channel.


                     ``GL_NONE``


                           Specifies that the red channel should be assigned the
                           appropriate value from the currently bound depth texture.


         ``GL_TEXTURE_LOD_BIAS``


               *params* specifies a fixed bias value that is to be added to the level-of-detail
               parameter for the texture before texture sampling. The specified value is added to the shader-supplied
               bias value (if any) and subsequently clamped into the implementation-defined range |EQUATION_15_|\ ,
               where |EQUATION_16_| is the value of the implementation defined constant ``GL_MAX_TEXTURE_LOD_BIAS``\ . The initial value is 0.0.


         ``GL_TEXTURE_MIN_FILTER``


               The texture minifying function is used whenever the level-of-detail function
               used when sampling from the texture determines that the texture should be minified.
               There are six defined minifying functions.
               Two of them use either the nearest texture elements or a weighted average of multiple texture elements
               to compute the texture value.
               The other four use mipmaps.


               A mipmap is an ordered set of arrays representing the same image
               at progressively lower resolutions.
               If the texture has dimensions
               |EQUATION_17_|\ ,
               there are |EQUATION_18_| mipmaps.
               The first mipmap is the original texture,
               with dimensions |EQUATION_19_|\ .
               Each subsequent mipmap has dimensions |EQUATION_20_|\ ,
               where |EQUATION_21_| are the dimensions of the previous mipmap,
               until either |EQUATION_22_| or |EQUATION_23_|\ .
               At that point,
               subsequent mipmaps have dimension |EQUATION_24_| or |EQUATION_25_| until the final mipmap,
               which has dimension |EQUATION_26_|\ .
               To define the mipmaps, call :c:func:`glTexImage1D`\ , :c:func:`glTexImage2D`\ ,
               :c:func:`glTexImage3D`\ ,
               :c:func:`glCopyTexImage1D`\ , or :c:func:`glCopyTexImage2D`
               with the :strong:`level` argument indicating the order of the mipmaps.
               Level 0 is the original texture;
               level |EQUATION_27_| is the final |EQUATION_28_| mipmap.


               *params* supplies a function for minifying the texture as one of the
               following:


                     ``GL_NEAREST``


                           Returns the value of the texture element that is nearest
                           (in Manhattan distance)
                           to the specified texture coordinates.


                     ``GL_LINEAR``


                           Returns the weighted average of the four texture elements
                           that are closest to the specified texture coordinates.
                           These can include items wrapped or repeated from other parts of a texture,
                           depending on the values of ``GL_TEXTURE_WRAP_S`` and ``GL_TEXTURE_WRAP_T``\ ,
                           and on the exact mapping.


                     ``GL_NEAREST_MIPMAP_NEAREST``


                           Chooses the mipmap that most closely matches the size of the pixel
                           being textured and uses the ``GL_NEAREST`` criterion
                           (the texture element closest to the specified texture coordinates)
                           to produce a texture value.


                     ``GL_LINEAR_MIPMAP_NEAREST``


                           Chooses the mipmap that most closely matches the size of the pixel
                           being textured and uses the ``GL_LINEAR`` criterion
                           (a weighted average of the four texture elements that are closest to the specified texture coordinates)
                           to produce a texture value.


                     ``GL_NEAREST_MIPMAP_LINEAR``


                           Chooses the two mipmaps that most closely match the size of the pixel
                           being textured and uses the ``GL_NEAREST`` criterion
                           (the texture element closest to the specified texture coordinates )
                           to produce a texture value from each mipmap.
                           The final texture value is a weighted average of those two values.


                     ``GL_LINEAR_MIPMAP_LINEAR``


                           Chooses the two mipmaps that most closely match the size of the pixel
                           being textured and uses the ``GL_LINEAR`` criterion
                           (a weighted average of the texture elements that are closest to the specified texture coordinates)
                           to produce a texture value from each mipmap.
                           The final texture value is a weighted average of those two values.


               As more texture elements are sampled in the minification process,
               fewer aliasing artifacts will be apparent.
               While the ``GL_NEAREST`` and ``GL_LINEAR`` minification functions can be
               faster than the other four,
               they sample only one or multiple texture elements to determine the texture value
               of the pixel being rendered and can produce moire patterns
               or ragged transitions.
               The initial value of ``GL_TEXTURE_MIN_FILTER`` is
               ``GL_NEAREST_MIPMAP_LINEAR``\ .


         ``GL_TEXTURE_MAG_FILTER``


               The texture magnification function is used whenever the level-of-detail function
               used when sampling from the texture determines that the texture should be magified.
               It sets the texture magnification function to either ``GL_NEAREST``
               or ``GL_LINEAR`` (see below). ``GL_NEAREST`` is generally faster
               than ``GL_LINEAR``\ ,
               but it can produce textured images with sharper edges
               because the transition between texture elements is not as smooth.
               The initial value of ``GL_TEXTURE_MAG_FILTER`` is ``GL_LINEAR``\ .


                     ``GL_NEAREST``


                           Returns the value of the texture element that is nearest
                           (in Manhattan distance)
                           to the specified texture coordinates.


                     ``GL_LINEAR``


                           Returns the weighted average of the texture elements
                           that are closest to the specified texture coordinates.
                           These can include items wrapped or repeated from other parts of a texture,
                           depending on the values of ``GL_TEXTURE_WRAP_S`` and ``GL_TEXTURE_WRAP_T``\ ,
                           and on the exact mapping.


         ``GL_TEXTURE_MIN_LOD``


               Sets the minimum level-of-detail parameter.  This floating-point value
               limits the selection of highest resolution mipmap (lowest mipmap
               level). The initial value is -1000.


         ``GL_TEXTURE_MAX_LOD``


               Sets the maximum level-of-detail parameter.  This floating-point value
               limits the selection of the lowest resolution mipmap (highest mipmap
               level). The initial value is 1000.


         ``GL_TEXTURE_MAX_LEVEL``


               Sets the index of the highest defined mipmap level. This is an integer
               value. The initial value is 1000.


         ``GL_TEXTURE_SWIZZLE_R``


               Sets the swizzle that will be applied to the |EQUATION_29_| component of a texel before it is returned to the shader. Valid values for *param* are ``GL_RED``\ ,
               ``GL_GREEN``\ , ``GL_BLUE``\ , ``GL_ALPHA``\ , ``GL_ZERO`` and
               ``GL_ONE``\ .
               If ``GL_TEXTURE_SWIZZLE_R`` is ``GL_RED``\ , the value for |EQUATION_30_| will be taken from the first
               channel of the fetched texel.
               If ``GL_TEXTURE_SWIZZLE_R`` is ``GL_GREEN``\ , the value for |EQUATION_31_| will be taken from the second
               channel of the fetched texel.
               If ``GL_TEXTURE_SWIZZLE_R`` is ``GL_BLUE``\ , the value for |EQUATION_32_| will be taken from the third
               channel of the fetched texel.
               If ``GL_TEXTURE_SWIZZLE_R`` is ``GL_ALPHA``\ , the value for |EQUATION_33_| will be taken from the fourth
               channel of the fetched texel.
               If ``GL_TEXTURE_SWIZZLE_R`` is ``GL_ZERO``\ , the value for |EQUATION_34_| will be subtituted with |EQUATION_35_|\ .
               If ``GL_TEXTURE_SWIZZLE_R`` is ``GL_ONE``\ , the value for |EQUATION_36_| will be subtituted with |EQUATION_37_|\ .
               The initial value is ``GL_RED``\ .


         ``GL_TEXTURE_SWIZZLE_G``


               Sets the swizzle that will be applied to the |EQUATION_38_| component of a texel before it is returned to the shader. Valid values for *param* and their effects are similar to
               those of ``GL_TEXTURE_SWIZZLE_R``\ .
               The initial value is ``GL_GREEN``\ .


         ``GL_TEXTURE_SWIZZLE_B``


               Sets the swizzle that will be applied to the |EQUATION_39_| component of a texel before it is returned to the shader. Valid values for *param* and their effects are similar to
               those of ``GL_TEXTURE_SWIZZLE_R``\ .
               The initial value is ``GL_BLUE``\ .


         ``GL_TEXTURE_SWIZZLE_A``


               Sets the swizzle that will be applied to the |EQUATION_40_| component of a texel before it is returned to the shader. Valid values for *param* and their effects are similar to
               those of ``GL_TEXTURE_SWIZZLE_R``\ .
               The initial value is ``GL_ALPHA``\ .


         ``GL_TEXTURE_SWIZZLE_RGBA``


               Sets the swizzles that will be applied to the
               |EQUATION_41_|\ ,
               |EQUATION_42_|\ ,
               |EQUATION_43_|\ , and |EQUATION_44_| components of a texel before they are returned to the shader. Valid values for *params* and their effects are similar to
               those of ``GL_TEXTURE_SWIZZLE_R``\ , except that all channels are specified simultaneously.
               Setting the value of ``GL_TEXTURE_SWIZZLE_RGBA`` is equivalent (assuming no errors are generated) to
               setting the parameters of each of ``GL_TEXTURE_SWIZZLE_R``\ ,
               ``GL_TEXTURE_SWIZZLE_G``\ ,
               ``GL_TEXTURE_SWIZZLE_B``\ , and
               ``GL_TEXTURE_SWIZZLE_A`` successively.


         ``GL_TEXTURE_WRAP_S``


               Sets the wrap parameter for texture coordinate
               |EQUATION_45_| to either ``GL_CLAMP_TO_EDGE``\ , ``GL_CLAMP_TO_BORDER``\ ,
               ``GL_MIRRORED_REPEAT``\ , or
               ``GL_REPEAT``\ . ``GL_CLAMP_TO_EDGE`` causes |EQUATION_46_| coordinates to be clamped to the
               range |EQUATION_47_|\ ,
               where |EQUATION_48_| is the size
               of the texture in the direction of clamping.
               ``GL_CLAMP_TO_BORDER`` evaluates |EQUATION_49_| coordinates in a similar manner to ``GL_CLAMP_TO_EDGE``\ .
               However, in cases where clamping would have occurred in ``GL_CLAMP_TO_EDGE`` mode, the fetched texel data
               is substituted with the values specified by ``GL_TEXTURE_BORDER_COLOR``\ .
               ``GL_REPEAT`` causes the
               integer part of the |EQUATION_50_| coordinate to be ignored; the GL uses only the
               fractional part, thereby creating a repeating pattern.
               ``GL_MIRRORED_REPEAT`` causes the |EQUATION_51_| coordinate to be set to the
               fractional part of the texture coordinate if the integer part of |EQUATION_52_| is
               even; if the integer part of |EQUATION_53_| is odd, then the |EQUATION_54_| texture coordinate is
               set to |EQUATION_55_|\ ,
               where |EQUATION_56_| represents the fractional part of |EQUATION_57_|\ .
               Initially, ``GL_TEXTURE_WRAP_S`` is set to ``GL_REPEAT``\ .


         ``GL_TEXTURE_WRAP_T``


               Sets the wrap parameter for texture coordinate
               |EQUATION_58_| to either ``GL_CLAMP_TO_EDGE``\ , ``GL_CLAMP_TO_BORDER``\ ,
               ``GL_MIRRORED_REPEAT``\ , or
               ``GL_REPEAT``\ .  See the discussion under ``GL_TEXTURE_WRAP_S``\ .
               Initially, ``GL_TEXTURE_WRAP_T`` is set to ``GL_REPEAT``\ .


         ``GL_TEXTURE_WRAP_R``


               Sets the wrap parameter for texture coordinate
               |EQUATION_59_| to either ``GL_CLAMP_TO_EDGE``\ , ``GL_CLAMP_TO_BORDER``\ ,
               ``GL_MIRRORED_REPEAT``\ , or
               ``GL_REPEAT``\ .  See the discussion under ``GL_TEXTURE_WRAP_S``\ .
               Initially, ``GL_TEXTURE_WRAP_R`` is set to ``GL_REPEAT``\ .


.. note::


   Suppose that a program attempts to sample from a texture and
   has set ``GL_TEXTURE_MIN_FILTER`` to one of the functions that requires a
   mipmap.  If either the dimensions of the texture images currently defined
   (with previous calls to :c:func:`glTexImage1D`\ , :c:func:`glTexImage2D`\ ,
   :c:func:`glTexImage3D`\ , :c:func:`glCopyTexImage1D`\ , or :c:func:`glCopyTexImage2D`\ ) do not
   follow the proper sequence for mipmaps (described above), or there are
   fewer texture images defined than are needed, or the set of texture images
   have differing numbers of texture components, then the texture is considered :strong:`incomplete`\ .


   Linear filtering accesses the four nearest texture elements only in 2D
   textures.  In 1D textures, linear filtering accesses the two nearest
   texture elements.  In 3D textures, linear filtering accesses the eight nearest
   texture elements.


   :c:func:`glTexParameter` specifies the texture parameters for the active texture unit, specified
   by calling :c:func:`glActiveTexture`\ .


..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_ENUM`` is generated if *target* or *pname* is not one of the accepted defined values.
* ``GL_INVALID_ENUM`` is generated if *params* should have a defined constant value (based on the value of *pname*\ ) and does not.


.. -----------------------------------------------------------------------------

**Associated Gets:**

* :c:func:`glGetTexParameter`
* :c:func:`glGetTexLevelParameter`


.. -----------------------------------------------------------------------------

.. <foot 'glTexParameter'>

.. role:: mml(raw)
   :format: html

.. |EQUATION_1_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mrow><mfenced open="(" close=")"><mrow> 0.0, 0.0, 0.0, 0.0 </mrow></mfenced></mrow></math>` 

.. |EQUATION_2_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mrow><mi mathvariant="italic">f</mi><mo>=</mo><mfrac><mrow><msub><mn>2</mn><mi mathvariant="italic">c</mi></msub><mo>+</mo><mn>1</mn></mrow><mrow><msup><mn>2</mn><mi mathvariant="italic">b</mi></msup><mo>-</mo><mn>1</mn></mrow></mfrac></mrow></math>` 

.. |EQUATION_3_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mi mathvariant="italic">result</mi><mo>=</mo><mfenced open="{" close=""><mrow><mtable><mtr><mtd><mn>1.0</mn></mtd></mtr><mtr><mtd><mn>0.0</mn></mtd></mtr></mtable><mo>&it;&nbsp;&nbsp;</mo><mtable><mtr><mtd><mrow><mi mathvariant="italic">r</mi><mo><=</mo><mfenced open="" close=""><msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></mfenced></mrow></mtd></mtr><mtr><mtd><mrow><mi mathvariant="italic">r</mi><mo>></mo><mfenced open="" close=""><msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></mfenced></mrow></mtd></mtr></mtable></mrow></mfenced></mrow></math>` 

.. |EQUATION_4_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mi mathvariant="italic">result</mi><mo>=</mo><mfenced open="{" close=""><mrow><mtable><mtr><mtd><mn>1.0</mn></mtd></mtr><mtr><mtd><mn>0.0</mn></mtd></mtr></mtable><mo>&it;&nbsp;&nbsp;</mo><mtable><mtr><mtd><mrow><mi mathvariant="italic">r</mi><mo>>=</mo><mfenced open="" close=""><msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></mfenced></mrow></mtd></mtr><mtr><mtd><mrow><mi mathvariant="italic">r</mi><mo><</mo><mfenced open="" close=""><msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></mfenced></mrow></mtd></mtr></mtable></mrow></mfenced></mrow></math>` 

.. |EQUATION_5_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mi mathvariant="italic">result</mi><mo>=</mo><mfenced open="{" close=""><mrow><mtable><mtr><mtd><mn>1.0</mn></mtd></mtr><mtr><mtd><mn>0.0</mn></mtd></mtr></mtable><mo>&it;&nbsp;&nbsp;</mo><mtable><mtr><mtd><mrow><mi mathvariant="italic">r</mi><mo><</mo><mfenced open="" close=""><msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></mfenced></mrow></mtd></mtr><mtr><mtd><mrow><mi mathvariant="italic">r</mi><mo>>=</mo><mfenced open="" close=""><msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></mfenced></mrow></mtd></mtr></mtable></mrow></mfenced></mrow></math>` 

.. |EQUATION_6_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mi mathvariant="italic">result</mi><mo>=</mo><mfenced open="{" close=""><mrow><mtable><mtr><mtd><mn>1.0</mn></mtd></mtr><mtr><mtd><mn>0.0</mn></mtd></mtr></mtable><mo>&it;&nbsp;&nbsp;</mo><mtable><mtr><mtd><mrow><mi mathvariant="italic">r</mi><mo>></mo><mfenced open="" close=""><msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></mfenced></mrow></mtd></mtr><mtr><mtd><mrow><mi mathvariant="italic">r</mi><mo><=</mo><mfenced open="" close=""><msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></mfenced></mrow></mtd></mtr></mtable></mrow></mfenced></mrow></math>` 

.. |EQUATION_7_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mi mathvariant="italic">result</mi><mo>=</mo><mfenced open="{" close=""><mrow><mtable><mtr><mtd><mn>1.0</mn></mtd></mtr><mtr><mtd><mn>0.0</mn></mtd></mtr></mtable><mo>&it;&nbsp;&nbsp;</mo><mtable><mtr><mtd><mrow><mi mathvariant="italic">r</mi><mo>=</mo><mfenced open="" close=""><msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></mfenced></mrow></mtd></mtr><mtr><mtd><mrow><mi mathvariant="italic">r</mi><mo>&ne;</mo><mfenced open="" close=""><msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></mfenced></mrow></mtd></mtr></mtable></mrow></mfenced></mrow></math>` 

.. |EQUATION_8_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mi mathvariant="italic">result</mi><mo>=</mo><mfenced open="{" close=""><mrow><mtable><mtr><mtd><mn>1.0</mn></mtd></mtr><mtr><mtd><mn>0.0</mn></mtd></mtr></mtable><mo>&it;&nbsp;&nbsp;</mo><mtable><mtr><mtd><mrow><mi mathvariant="italic">r</mi><mo>&ne;</mo><mfenced open="" close=""><msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></mfenced></mrow></mtd></mtr><mtr><mtd><mrow><mi mathvariant="italic">r</mi><mo>=</mo><mfenced open="" close=""><msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></mfenced></mrow></mtd></mtr></mtable></mrow></mfenced></mrow></math>` 

.. |EQUATION_9_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mrow><mi mathvariant="italic">result</mi><mo>=</mo><mi>1.0</mi></mrow></math>` 

.. |EQUATION_10_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mrow><mi mathvariant="italic">result</mi><mo>=</mo><mi>0.0</mi></mrow></math>` 

.. |EQUATION_11_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_12_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <msub><mi mathvariant="italic">D</mi><mi mathvariant="italic">t</mi></msub></math>` 

.. |EQUATION_13_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">result</mi></math>` 

.. |EQUATION_14_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_15_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mfenced open="[" close="]"><mfenced open="" close=""><mrow> - <msub><mi mathvariant="italic">bias</mi><mi mathvariant="italic">max</mi></msub></mrow></mfenced><mrow><mfenced open="" close=""><mrow><msub><mi mathvariant="italic">bias</mi><mi mathvariant="italic">max</mi></msub></mrow></mfenced></mrow></mfenced></math>` 

.. |EQUATION_16_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mrow><msub><mi mathvariant="italic">bias</mi><mi mathvariant="italic">max</mi></msub></mrow></math>` 

.. |EQUATION_17_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><msup><mn>2</mn><mi mathvariant="italic">n</mi></msup><mo>&times;</mo><msup><mn>2</mn><mi mathvariant="italic">m</mi></msup></mrow></math>` 

.. |EQUATION_18_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mrow><mi mathvariant="italic">max</mi><mo>&af;</mo><mfenced open="(" close=")"><mi mathvariant="italic">n</mi><mi mathvariant="italic">m</mi></mfenced></mrow><mo>+</mo><mn>1</mn></mrow></math>` 

.. |EQUATION_19_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><msup><mn>2</mn><mi mathvariant="italic">n</mi></msup><mo>&times;</mo><msup><mn>2</mn><mi mathvariant="italic">m</mi></msup></mrow></math>` 

.. |EQUATION_20_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><msup><mn>2</mn><mfenced open="" close=""><mrow><mi mathvariant="italic">k</mi><mo>-</mo><mn>1</mn></mrow></mfenced></msup><mo>&times;</mo><msup><mn>2</mn><mfenced open="" close=""><mrow><mi mathvariant="italic">l</mi><mo>-</mo><mn>1</mn></mrow></mfenced></msup></mrow></math>` 

.. |EQUATION_21_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><msup><mn>2</mn><mi mathvariant="italic">k</mi></msup><mo>&times;</mo><msup><mn>2</mn><mi mathvariant="italic">l</mi></msup></mrow></math>` 

.. |EQUATION_22_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mi mathvariant="italic">k</mi><mo>=</mo><mn>0</mn></mrow></math>` 

.. |EQUATION_23_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mi mathvariant="italic">l</mi><mo>=</mo><mn>0</mn></mrow></math>` 

.. |EQUATION_24_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mn>1</mn><mo>&times;</mo><msup><mn>2</mn><mfenced open="" close=""><mrow><mi mathvariant="italic">l</mi><mo>-</mo><mn>1</mn></mrow></mfenced></msup></mrow></math>` 

.. |EQUATION_25_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><msup><mn>2</mn><mfenced open="" close=""><mrow><mi mathvariant="italic">k</mi><mo>-</mo><mn>1</mn></mrow></mfenced></msup><mo>&times;</mo><mn>1</mn></mrow></math>` 

.. |EQUATION_26_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mn>1</mn><mo>&times;</mo><mn>1</mn></mrow></math>` 

.. |EQUATION_27_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mi mathvariant="italic">max</mi><mo>&af;</mo><mfenced open="(" close=")"><mi mathvariant="italic">n</mi><mi mathvariant="italic">m</mi></mfenced></mrow></math>` 

.. |EQUATION_28_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mn>1</mn><mo>&times;</mo><mn>1</mn></mrow></math>` 

.. |EQUATION_29_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_30_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_31_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_32_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_33_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_34_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_35_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mn>0.0</mn></math>` 

.. |EQUATION_36_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_37_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mn>1.0</mn></math>` 

.. |EQUATION_38_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">g</mi></math>` 

.. |EQUATION_39_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">b</mi></math>` 

.. |EQUATION_40_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">a</mi></math>` 

.. |EQUATION_41_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_42_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">g</mi></math>` 

.. |EQUATION_43_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">b</mi></math>` 

.. |EQUATION_44_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">a</mi></math>` 

.. |EQUATION_45_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_46_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_47_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mfenced open="[" close="]"><mfenced open="" close=""><mrow><mfrac><mn>1</mn><mn>2<mi mathvariant="italic">N</mi></mn></mfrac></mrow></mfenced><mrow><mn>1</mn><mo>-</mo><mfenced open="" close=""><mrow><mfrac><mn>1</mn><mn>2<mi mathvariant="italic">N</mi></mn></mfrac></mrow></mfenced></mrow></mfenced></math>` 

.. |EQUATION_48_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">N</mi></math>` 

.. |EQUATION_49_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_50_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_51_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_52_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_53_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_54_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_55_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mn>1</mn><mo>-</mo><mrow><mi mathvariant="italic">frac</mi><mo>&af;</mo><mfenced open="(" close=")"><mi mathvariant="italic">s</mi></mfenced></mrow></mrow></math>` 

.. |EQUATION_56_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mi mathvariant="italic">frac</mi><mo>&af;</mo><mfenced open="(" close=")"><mi mathvariant="italic">s</mi></mfenced></mrow></math>` 

.. |EQUATION_57_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_58_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">t</mi></math>` 

.. |EQUATION_59_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )1991-2006 Silicon Graphics, Inc. SGI Free Software B License.

