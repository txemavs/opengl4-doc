.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:30
.. *****************************************************************************

.. following information was extracted from file 'man4/glGetVertexAttribPointerv.xml'
.. (c)2003-2005 3Dlabs Inc. Ltd. 2010 Khronos Group.
.. See license details at http://opencontent.org/openpub/


.. currentmodule:: OpenGL.man4

function `glGetVertexAttribPointerv`
------------------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Return the address of the specified generic vertex attribute pointer

.. c:function:: glGetVertexAttribPointerv


      :param index:

            Specifies the generic vertex attribute
            parameter to be returned.

      :param pname:

            Specifies the symbolic name of the generic
            vertex attribute parameter to be returned. Must be
            ``GL_VERTEX_ATTRIB_ARRAY_POINTER``\ .

      :param pointer:

            Returns the pointer value.

.. rubric:: Specification

.. c:function:: void glGetVertexAttribPointerv(GLuint  index, GLenum  pname, GLvoid ** pointer)
   :noindex: 


.. seealso::

   :c:func:`glGetVertexAttrib`\ ,
   :c:func:`glVertexAttribPointer`

..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glGetVertexAttribPointerv` returns
pointer information. *index* is the generic
vertex attribute to be queried, *pname* is
a symbolic constant indicating the pointer to be returned, and
*params* is a pointer to a location in
which to place the returned data.

The *pointer* returned is a byte offset into the data store of the buffer object
that was bound to the ``GL_ARRAY_BUFFER`` target
(see :c:func:`glBindBuffer`\ ) when the desired pointer was previously specified.


.. note::

   The state returned is retrieved from the currently bound vertex array object.
   The initial value for each pointer is 0.

..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_OPERATION`` is generated if no vertex array object is currently bound.
* ``GL_INVALID_VALUE`` is generated if *index* is greater than or equal to ``GL_MAX_VERTEX_ATTRIBS``\ .
* ``GL_INVALID_ENUM`` is generated if *pname* is not an accepted value.


.. -----------------------------------------------------------------------------

**Associated Gets:**

* :c:func:`glGet` with argument ``GL_MAX_VERTEX_ATTRIBS``


.. -----------------------------------------------------------------------------

.. <foot 'glGetVertexAttribPointerv'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )2003-2005 3Dlabs Inc. Ltd. (\ c\ )2010 Khronos Group. Open Publication License.

