.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:29
.. *****************************************************************************

.. following information was extracted from file 'man4/glDeleteShader.xml'
.. (c)2003-2005 3Dlabs Inc. Ltd.
.. See license details at http://opencontent.org/openpub/


.. currentmodule:: OpenGL.man4

function `glDeleteShader`
-------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Deletes a shader object

.. c:function:: glDeleteShader


      :param shader:

            Specifies the shader object to be deleted.

.. rubric:: Specification

.. c:function:: void glDeleteShader(GLuint  shader)
   :noindex: 


.. seealso::

   :c:func:`glCreateProgram`\ ,
   :c:func:`glCreateShader`\ ,
   :c:func:`glDetachShader`\ ,
   :c:func:`glUseProgram`

..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glDeleteShader` frees the memory and
invalidates the name associated with the shader object specified
by *shader*\ . This command effectively
undoes the effects of a call to
:c:func:`glCreateShader`\ .

If a shader object to be deleted is attached to a program
object, it will be flagged for deletion, but it will not be
deleted until it is no longer attached to any program object,
for any rendering context (i.e., it must be detached from
wherever it was attached before it will be deleted). A value of
0 for *shader* will be silently
ignored.

To determine whether an object has been flagged for
deletion, call
:c:func:`glGetShader`
with arguments *shader* and
``GL_DELETE_STATUS``\ .


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_VALUE`` is generated if *shader* is not a value generated by OpenGL.


.. -----------------------------------------------------------------------------

**Associated Gets:**

* :c:func:`glGetAttachedShaders` with the program object to be queried
* :c:func:`glGetShader` with arguments *shader* and ``GL_DELETE_STATUS``
* :c:func:`glIsShader`


.. -----------------------------------------------------------------------------

.. <foot 'glDeleteShader'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )2003-2005 3Dlabs Inc. Ltd. Open Publication License.

