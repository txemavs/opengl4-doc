.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:30
.. *****************************************************************************

.. following information was extracted from file 'man4/glTexSubImage1D.xml'
.. (c)1991-2006 Silicon Graphics, Inc.
.. See license details at http://oss.sgi.com/projects/FreeB/


.. currentmodule:: OpenGL.man4

function `glTexSubImage1D`
--------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Specify a one-dimensional texture subimage

.. c:function:: glTexSubImage1D


         :param target:

                  Specifies the target texture.
                  Must be ``GL_TEXTURE_1D``\ .

         :param level:

                  Specifies the level-of-detail number.
                  Level 0 is the base image level.
                  Level :strong:`n` is the :strong:`n` th mipmap reduction image.

         :param xoffset:

                  Specifies a texel offset in the x direction within the texture array.

         :param width:

                  Specifies the width of the texture subimage.

         :param format:

                  Specifies the format of the pixel data.
                  The following symbolic values are accepted:
                  ``GL_RED``\ ,
                  ``GL_RG``\ ,
                  ``GL_RGB``\ ,
                  ``GL_BGR``\ ,
                  ``GL_RGBA``\ , and
                  ``GL_BGRA``\ .

         :param type:

                  Specifies the data type of the pixel data.
                  The following symbolic values are accepted:
                  ``GL_UNSIGNED_BYTE``\ ,
                  ``GL_BYTE``\ ,
                  ``GL_UNSIGNED_SHORT``\ ,
                  ``GL_SHORT``\ ,
                  ``GL_UNSIGNED_INT``\ ,
                  ``GL_INT``\ ,
                  ``GL_FLOAT``\ ,
                  ``GL_UNSIGNED_BYTE_3_3_2``\ ,
                  ``GL_UNSIGNED_BYTE_2_3_3_REV``\ ,
                  ``GL_UNSIGNED_SHORT_5_6_5``\ ,
                  ``GL_UNSIGNED_SHORT_5_6_5_REV``\ ,
                  ``GL_UNSIGNED_SHORT_4_4_4_4``\ ,
                  ``GL_UNSIGNED_SHORT_4_4_4_4_REV``\ ,
                  ``GL_UNSIGNED_SHORT_5_5_5_1``\ ,
                  ``GL_UNSIGNED_SHORT_1_5_5_5_REV``\ ,
                  ``GL_UNSIGNED_INT_8_8_8_8``\ ,
                  ``GL_UNSIGNED_INT_8_8_8_8_REV``\ ,
                  ``GL_UNSIGNED_INT_10_10_10_2``\ , and
                  ``GL_UNSIGNED_INT_2_10_10_10_REV``\ .

         :param data:

                  Specifies a pointer to the image data in memory.

.. rubric:: Specification

.. c:function:: void glTexSubImage1D(GLenum  target, GLint  level, GLint  xoffset, GLsizei  width, GLenum  format, GLenum  type, const GLvoid *  data)
   :noindex: 


.. seealso::


            :c:func:`glActiveTexture`\ ,
            :c:func:`glCopyTexImage1D`\ ,
            :c:func:`glCopyTexImage2D`\ ,
            :c:func:`glCopyTexSubImage1D`\ ,
            :c:func:`glCopyTexSubImage2D`\ ,
            :c:func:`glCopyTexSubImage3D`\ ,
            :c:func:`glPixelStore`\ ,
            :c:func:`glTexImage1D`\ ,
            :c:func:`glTexImage2D`\ ,
            :c:func:`glTexImage3D`\ ,
            :c:func:`glTexParameter`\ ,
            :c:func:`glTexSubImage2D`\ ,
            :c:func:`glTexSubImage3D`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


Texturing maps a portion of a specified texture image
onto each graphical primitive for which texturing is enabled.
To enable or disable one-dimensional texturing, call :c:func:`glEnable`
and :c:func:`glDisable` with argument ``GL_TEXTURE_1D``\ .


:c:func:`glTexSubImage1D` redefines a contiguous subregion of an existing one-dimensional
texture image.
The texels referenced by *data* replace the portion of the
existing texture array with x indices *xoffset* and |EQUATION_1_|\ ,
inclusive.
This region may not include any texels outside the range of the
texture array as it was originally specified.
It is not an error to specify a subtexture with width of 0, but
such a specification has no effect.


If a non-zero named buffer object is bound to the ``GL_PIXEL_UNPACK_BUFFER`` target
(see :c:func:`glBindBuffer`\ ) while a texture image is
specified, *data* is treated as a byte offset into the buffer object's data store.


.. note::


   :c:func:`glPixelStore` modes affect texture images.


   :c:func:`glTexSubImage1D` specifies a one-dimensional subtexture for the current texture unit,
   specified with :c:func:`glActiveTexture`\ .


..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_ENUM`` is generated if *target* is not one of the allowable values.
* ``GL_INVALID_ENUM`` is generated if *format* is not an accepted format constant.
* ``GL_INVALID_ENUM`` is generated if *type* is not a type constant.
* ``GL_INVALID_VALUE`` is generated if *level* is less than 0.
* ``GL_INVALID_VALUE`` may be generated if *level* is greater than |EQUATION_2_| :strong:`max`\ , where :strong:`max` is the returned value of ``GL_MAX_TEXTURE_SIZE``\ .
* ``GL_INVALID_VALUE`` is generated if |EQUATION_3_|\ , or if |EQUATION_4_|\ , where |EQUATION_5_| is the ``GL_TEXTURE_WIDTH``\ , and |EQUATION_6_| is the width of the ``GL_TEXTURE_BORDER`` of the texture image being modified. Note that |EQUATION_7_| includes twice the border width.
* ``GL_INVALID_VALUE`` is generated if *width* is less than 0.
* ``GL_INVALID_OPERATION`` is generated if the texture array has not been defined by a previous :c:func:`glTexImage1D` operation.
* ``GL_INVALID_OPERATION`` is generated if *type* is one of ``GL_UNSIGNED_BYTE_3_3_2``\ , ``GL_UNSIGNED_BYTE_2_3_3_REV``\ , ``GL_UNSIGNED_SHORT_5_6_5``\ , or ``GL_UNSIGNED_SHORT_5_6_5_REV`` and *format* is not ``GL_RGB``\ .
* ``GL_INVALID_OPERATION`` is generated if *type* is one of ``GL_UNSIGNED_SHORT_4_4_4_4``\ , ``GL_UNSIGNED_SHORT_4_4_4_4_REV``\ , ``GL_UNSIGNED_SHORT_5_5_5_1``\ , ``GL_UNSIGNED_SHORT_1_5_5_5_REV``\ , ``GL_UNSIGNED_INT_8_8_8_8``\ , ``GL_UNSIGNED_INT_8_8_8_8_REV``\ , ``GL_UNSIGNED_INT_10_10_10_2``\ , or ``GL_UNSIGNED_INT_2_10_10_10_REV`` and *format* is neither ``GL_RGBA`` nor ``GL_BGRA``\ .
* ``GL_INVALID_OPERATION`` is generated if a non-zero buffer object name is bound to the ``GL_PIXEL_UNPACK_BUFFER`` target and the buffer object's data store is currently mapped.
* ``GL_INVALID_OPERATION`` is generated if a non-zero buffer object name is bound to the ``GL_PIXEL_UNPACK_BUFFER`` target and the data would be unpacked from the buffer object such that the memory reads required would exceed the data store size.
* ``GL_INVALID_OPERATION`` is generated if a non-zero buffer object name is bound to the ``GL_PIXEL_UNPACK_BUFFER`` target and *data* is not evenly divisible into the number of bytes needed to store in memory a datum indicated by *type*\ .


.. -----------------------------------------------------------------------------

**Associated Gets:**

* :c:func:`glGetTexImage`
* :c:func:`glGet` with argument ``GL_PIXEL_UNPACK_BUFFER_BINDING``


.. -----------------------------------------------------------------------------

.. <foot 'glTexSubImage1D'>

.. role:: mml(raw)
   :format: html

.. |EQUATION_1_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mi mathvariant="italic">xoffset</mi><mo>+</mo><mi mathvariant="italic">width</mi><mo>-</mo><mn>1</mn></mrow></math>` 

.. |EQUATION_2_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <msub><mi mathvariant="italic">log</mi><mn>2</mn></msub></math>` 

.. |EQUATION_3_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mi mathvariant="italic">xoffset</mi><mo><</mo><mrow><mo>-</mo><mi mathvariant="italic">b</mi></mrow></mrow></math>` 

.. |EQUATION_4_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow><mfenced open="(" close=")"><mrow><mi mathvariant="italic">xoffset</mi><mo>+</mo><mi mathvariant="italic">width</mi></mrow></mfenced><mo>></mo><mfenced open="(" close=")"><mrow><mi mathvariant="italic">w</mi><mo>-</mo><mi mathvariant="italic">b</mi></mrow></mfenced></mrow></math>` 

.. |EQUATION_5_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">w</mi></math>` 

.. |EQUATION_6_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">b</mi></math>` 

.. |EQUATION_7_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">w</mi></math>` 

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )1991-2006 Silicon Graphics, Inc. SGI Free Software B License.

