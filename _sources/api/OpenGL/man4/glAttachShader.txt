.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:28
.. *****************************************************************************

.. following information was extracted from file 'man4/glAttachShader.xml'
.. (c)2003-2005 3Dlabs Inc. Ltd.
.. See license details at http://opencontent.org/openpub/


.. currentmodule:: OpenGL.man4

function `glAttachShader`
-------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Attaches a shader object to a program object

.. c:function:: glAttachShader


   :param program:

      Specifies the program object to which a shader
      object will be attached.

   :param shader:

      Specifies the shader object that is to be attached.

.. rubric:: Specification

.. c:function:: void glAttachShader(GLuint  program, GLuint  shader)
   :noindex: 


.. seealso::


         :c:func:`glCompileShader`\ ,
         :c:func:`glCreateShader`\ ,
         :c:func:`glDeleteShader`\ ,
         :c:func:`glDetachShader`\ ,
         :c:func:`glLinkProgram`\ ,
         :c:func:`glShaderSource`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


In order to create a complete shader program, there must be a way to
specify the list of things that will be linked together. Program
objects provide this mechanism. Shaders that are to be linked
together in a program object must first be attached to that
program object. :c:func:`glAttachShader` attaches the
shader object specified by *shader* to the
program object specified by *program*\ . This
indicates that *shader* will be included in
link operations that will be performed on
*program*\ .

All operations that can be performed on a shader object
are valid whether or not the shader object is attached to a
program object. It is permissible to attach a shader object to a
program object before source code has been loaded into the
shader object or before the shader object has been compiled. It
is permissible to attach multiple shader objects of the same
type because each may contain a portion of the complete shader.
It is also permissible to attach a shader object to more than
one program object. If a shader object is deleted while it is
attached to a program object, it will be flagged for deletion,
and deletion will not occur until
:c:func:`glDetachShader`
is called to detach it from all program objects to which it is
attached.


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_VALUE`` is generated if either *program* or *shader* is not a value generated by OpenGL.
* ``GL_INVALID_OPERATION`` is generated if *program* is not a program object.
* ``GL_INVALID_OPERATION`` is generated if *shader* is not a shader object.
* ``GL_INVALID_OPERATION`` is generated if *shader* is already attached to *program*\ .


.. -----------------------------------------------------------------------------

**Associated Gets:**

* :c:func:`glGetAttachedShaders` with the handle of a valid program object
* :c:func:`glGetShaderInfoLog`
* :c:func:`glGetShaderSource`
* :c:func:`glIsProgram`
* :c:func:`glIsShader`


.. -----------------------------------------------------------------------------

.. <foot 'glAttachShader'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )2003-2005 3Dlabs Inc. Ltd. Open Publication License.

