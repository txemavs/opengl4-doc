.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:29
.. *****************************************************************************

.. following information was extracted from file 'man4/glGetSubroutineUniformLocation.xml'
.. (c)2010 Khronos Group.
.. See license details at http://opencontent.org/openpub/


.. currentmodule:: OpenGL.man4

function `glGetSubroutineUniformLocation`
-----------------------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Retrieve the location of a subroutine uniform of a given shader stage within a program

.. c:function:: glGetSubroutineUniformLocation


         :param program:

                  Specifies the name of the program containing shader stage.

         :param shadertype:

                  Specifies the shader stage from which to query for subroutine uniform index.
                  *shadertype*
                  must be one of ``GL_VERTEX_SHADER``\ , ``GL_TESS_CONTROL_SHADER``\ ,
                  ``GL_TESS_EVALUATION_SHADER``\ , ``GL_GEOMETRY_SHADER`` or
                  ``GL_FRAGMENT_SHADER``\ .

         :param name:

                  Specifies the name of the subroutine uniform whose index to query.

.. rubric:: Specification

.. c:function:: GLint glGetSubroutineUniformLocation(GLuint  program, GLenum  shadertype, const GLchar * name)
   :noindex: 


.. seealso::


            :c:func:`glGetProgram`\ ,
            :c:func:`glGetActiveSubroutineUniform`\ ,
            :c:func:`glGetActiveSubroutineUniformName`\ ,
            :c:func:`glGetUniformLocation`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glGetSubroutineUniformLocation` returns the location of the subroutine uniform variable
*name* in the shader stage of type *shadertype* attached to
*program*\ , with behavior otherwise identical to
:c:func:`glGetUniformLocation`\ .


If *name* is not the name of a subroutine uniform in the shader stage, -1
is returned, but no error is generated. If *name* is the name of a subroutine uniform in the shader stage,
a value between zero and the value of ``GL_ACTIVE_SUBROUTINE_LOCATIONS`` minus one will be returned.
Subroutine locations are assigned using consecutive integers in the range from zero to the value
of ``GL_ACTIVE_SUBROUTINE_LOCATIONS`` minus one for the shader stage.  For active subroutine uniforms
declared as arrays, the declared array elements are assigned consecutive locations.


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_ENUM`` is generated if *shadertype* or *pname* is not one of the accepted values.
* ``GL_INVALID_VALUE`` is generated if *program* is not the name of an existing program object.


.. -----------------------------------------------------------------------------

.. <foot 'glGetSubroutineUniformLocation'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )2010 Khronos Group. Open Publication License.

