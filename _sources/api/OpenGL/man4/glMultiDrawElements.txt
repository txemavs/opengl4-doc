.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:30
.. *****************************************************************************

.. following information was extracted from file 'man4/glMultiDrawElements.xml'
.. (c)1991-2006 Silicon Graphics, Inc.
.. See license details at http://oss.sgi.com/projects/FreeB/


.. currentmodule:: OpenGL.man4

function `glMultiDrawElements`
------------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Render multiple sets of primitives by specifying indices of array data elements

.. c:function:: glMultiDrawElements


         :param mode:

                  Specifies what kind of primitives to render.
                  Symbolic constants
                  ``GL_POINTS``\ ,
                  ``GL_LINE_STRIP``\ ,
                  ``GL_LINE_LOOP``\ ,
                  ``GL_LINES``\ ,
                  ``GL_LINE_STRIP_ADJACENCY``\ ,
                  ``GL_LINES_ADJACENCY``\ ,
                  ``GL_TRIANGLE_STRIP``\ ,
                  ``GL_TRIANGLE_FAN``\ ,
                  ``GL_TRIANGLES``\ ,
                  ``GL_TRIANGLE_STRIP_ADJACENCY``\ ,
                  ``GL_TRIANGLES_ADJACENCY`` and ``GL_PATCHES``
                  are accepted.

         :param count:

                  Points to an array of the elements counts.

         :param type:

                  Specifies the type of the values in *indices*\ . Must be one of
                  ``GL_UNSIGNED_BYTE``\ , ``GL_UNSIGNED_SHORT``\ , or
                  ``GL_UNSIGNED_INT``\ .

         :param indices:

                  Specifies a pointer to the location where the indices are stored.

         :param primcount:

                  Specifies the size of the *count* array.

.. rubric:: Specification

.. c:function:: void glMultiDrawElements(GLenum  mode, const GLsizei *  count, GLenum  type, const GLvoid **  indices, GLsizei  primcount)
   :noindex: 


.. seealso::


            :c:func:`glDrawArrays`\ ,
            :c:func:`glDrawRangeElements`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glMultiDrawElements` specifies multiple sets of geometric primitives with very few subroutine
calls. Instead of calling a GL function to pass each individual vertex,
normal, texture coordinate, edge flag, or color, you can prespecify
separate arrays of vertices, normals, and so on, and use them to construct a
sequence of primitives with a single call to :c:func:`glMultiDrawElements`\ .


:c:func:`glMultiDrawElements` is identical in operation to :c:func:`glDrawElements` except that
*primcount* separate lists of elements are specified.


Vertex attributes that are modified by :c:func:`glMultiDrawElements` have an
unspecified value after :c:func:`glMultiDrawElements` returns. Attributes that aren't
modified maintain their previous values.


.. note::


   ``GL_LINE_STRIP_ADJACENCY``\ ,
   ``GL_LINES_ADJACENCY``\ ,
   ``GL_TRIANGLE_STRIP_ADJACENCY`` and
   ``GL_TRIANGLES_ADJACENCY``
   are available only if the GL version is 3.2 or greater.


..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_ENUM`` is generated if *mode* is not an accepted value.
* ``GL_INVALID_VALUE`` is generated if *primcount* is negative.
* ``GL_INVALID_OPERATION`` is generated if a non-zero buffer object name is bound to an enabled array or the element array and the buffer object's data store is currently mapped.


.. -----------------------------------------------------------------------------

.. <foot 'glMultiDrawElements'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )1991-2006 Silicon Graphics, Inc. SGI Free Software B License.

