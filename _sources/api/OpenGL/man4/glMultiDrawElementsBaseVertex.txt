.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:30
.. *****************************************************************************

.. following information was extracted from file 'man4/glMultiDrawElementsBaseVertex.xml'
.. (c)2010 Khronos Group.
.. See license details at http://opencontent.org/openpub/


.. currentmodule:: OpenGL.man4

function `glMultiDrawElementsBaseVertex`
----------------------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Render multiple sets of primitives by specifying indices of array data elements and an index to apply to each index

.. c:function:: glMultiDrawElementsBaseVertex


         :param mode:

                  Specifies what kind of primitives to render.
                  Symbolic constants
                  ``GL_POINTS``\ ,
                  ``GL_LINE_STRIP``\ ,
                  ``GL_LINE_LOOP``\ ,
                  ``GL_LINES``\ ,
                  ``GL_LINE_STRIP_ADJACENCY``\ ,
                  ``GL_LINES_ADJACENCY``\ ,
                  ``GL_TRIANGLE_STRIP``\ ,
                  ``GL_TRIANGLE_FAN``\ ,
                  ``GL_TRIANGLES``\ ,
                  ``GL_TRIANGLE_STRIP_ADJACENCY``\ ,
                  ``GL_TRIANGLES_ADJACENCY`` and ``GL_PATCHES``
                  are accepted.

         :param count:

                  Points to an array of the elements counts.

         :param type:

                  Specifies the type of the values in *indices*\ . Must be one of
                  ``GL_UNSIGNED_BYTE``\ , ``GL_UNSIGNED_SHORT``\ , or
                  ``GL_UNSIGNED_INT``\ .

         :param indices:

                  Specifies a pointer to the location where the indices are stored.

         :param primcount:

                  Specifies the size of the *count* array.

         :param basevertex:

                  Specifies a pointer to the location where the base vertices are stored.

.. rubric:: Specification

.. c:function:: void glMultiDrawElementsBaseVertex(GLenum  mode, const GLsizei * count, GLenum  type, const GLvoid ** indices, GLsizei  primcount, GLint * basevertex)
   :noindex: 


.. seealso::


            :c:func:`glMultiDrawElements`\ ,
            :c:func:`glDrawElementsBaseVertex`\ ,
            :c:func:`glDrawArrays`\ ,
            :c:func:`glVertexAttribPointer`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glMultiDrawElementsBaseVertex` behaves identically to :c:func:`glDrawElementsBaseVertex`\ ,
except that *primcount* separate lists of elements are specifried instead.


It has the same effect as:

.. code-block:: c

       for (int i = 0; i < primcount; i++)
           if (count[i] > 0)
               glDrawElementsBaseVertex(mode,
                                        count[i],
                                        type,
                                        indices[i],
                                        basevertex[i]);
..


.. note::


   :c:func:`glMultiDrawElementsBaseVertex` is available only if the GL version is 3.1 or greater.


   ``GL_LINE_STRIP_ADJACENCY``\ ,
   ``GL_LINES_ADJACENCY``\ ,
   ``GL_TRIANGLE_STRIP_ADJACENCY`` and
   ``GL_TRIANGLES_ADJACENCY``
   are available only if the GL version is 3.2 or greater.


..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_ENUM`` is generated if *mode* is not an accepted value.
* ``GL_INVALID_VALUE`` is generated if *primcount* is negative.
* ``GL_INVALID_OPERATION`` is generated if a non-zero buffer object name is bound to an enabled array or the element array and the buffer object's data store is currently mapped.


.. -----------------------------------------------------------------------------

.. <foot 'glMultiDrawElementsBaseVertex'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )2010 Khronos Group. Open Publication License.

