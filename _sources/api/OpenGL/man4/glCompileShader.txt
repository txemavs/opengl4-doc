.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:28
.. *****************************************************************************

.. following information was extracted from file 'man4/glCompileShader.xml'
.. (c)2003-2005 3Dlabs Inc. Ltd.
.. See license details at http://opencontent.org/openpub/


.. currentmodule:: OpenGL.man4

function `glCompileShader`
--------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Compiles a shader object

.. c:function:: glCompileShader


      :param shader:

            Specifies the shader object to be
            compiled.

.. rubric:: Specification

.. c:function:: void glCompileShader(GLuint  shader)
   :noindex: 


.. seealso::

   :c:func:`glCreateShader`\ ,
   :c:func:`glLinkProgram`\ ,
   :c:func:`glShaderSource`

..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glCompileShader` compiles the source
code strings that have been stored in the shader object
specified by *shader*\ .

The compilation status will be stored as part of the
shader object's state. This value will be set to
``GL_TRUE`` if the shader was compiled without
errors and is ready for use, and ``GL_FALSE``
otherwise. It can be queried by calling
:c:func:`glGetShader`
with arguments *shader* and
``GL_COMPILE_STATUS``\ .

Compilation of a shader can fail for a number of reasons
as specified by the OpenGL Shading Language Specification.
Whether or not the compilation was successful, information about
the compilation can be obtained from the shader object's
information log by calling
:c:func:`glGetShaderInfoLog`\ .


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_VALUE`` is generated if *shader* is not a value generated by OpenGL.
* ``GL_INVALID_OPERATION`` is generated if *shader* is not a shader object.


.. -----------------------------------------------------------------------------

**Associated Gets:**

* :c:func:`glGetShaderInfoLog` with argument *shader*
* :c:func:`glGetShader` with arguments *shader* and ``GL_COMPILE_STATUS``
* :c:func:`glIsShader`


.. -----------------------------------------------------------------------------

.. <foot 'glCompileShader'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )2003-2005 3Dlabs Inc. Ltd. Open Publication License.

