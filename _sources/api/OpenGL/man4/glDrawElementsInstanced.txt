.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:29
.. *****************************************************************************

.. following information was extracted from file 'man4/glDrawElementsInstanced.xml'
.. (c)2010 Khronos Group.
.. See license details at http://opencontent.org/openpub/


.. currentmodule:: OpenGL.man4

function `glDrawElementsInstanced`
----------------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Draw multiple instances of a set of elements

.. c:function:: glDrawElementsInstanced


         :param mode:

                  Specifies what kind of primitives to render.
                  Symbolic constants
                  ``GL_POINTS``\ ,
                  ``GL_LINE_STRIP``\ ,
                  ``GL_LINE_LOOP``\ ,
                  ``GL_LINES``\ ,
                  ``GL_LINE_STRIP_ADJACENCY``\ ,
                  ``GL_LINES_ADJACENCY``\ ,
                  ``GL_TRIANGLE_STRIP``\ ,
                  ``GL_TRIANGLE_FAN``\ ,
                  ``GL_TRIANGLES``\ ,
                  ``GL_TRIANGLE_STRIP_ADJACENCY``\ ,
                  ``GL_TRIANGLES_ADJACENCY`` and ``GL_PATCHES``
                  are accepted.

         :param count:

                  Specifies the number of elements to be rendered.

         :param type:

                  Specifies the type of the values in *indices*\ . Must be one of ``GL_UNSIGNED_BYTE``\ ,
                  ``GL_UNSIGNED_SHORT``\ , or ``GL_UNSIGNED_INT``\ .

         :param indices:

                  Specifies a pointer to the location where the indices are stored.

         :param primcount:

                  Specifies the number of instances of the specified range of indices to be rendered.

.. rubric:: Specification

.. c:function:: void glDrawElementsInstanced(GLenum  mode, GLsizei  count, GLenum  type, const void *  indices, GLsizei  primcount)
   :noindex: 


.. seealso::


            :c:func:`glDrawElements`\ ,
            :c:func:`glDrawArraysInstanced`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glDrawElementsInstanced` behaves identically to :c:func:`glDrawElements`
except that *primcount* instances of the set of elements are executed and the value of the internal counter
*instanceID* advances for each iteration. *instanceID* is an internal 32-bit integer counter
that may be read by a vertex shader as ``gl_InstanceID``\ .


:c:func:`glDrawElementsInstanced` has the same effect as:

.. code-block:: c

       if (mode, count, or type is invalid )
           generate appropriate error
       else {
           for (int i = 0; i < primcount ; i++) {
               instanceID = i;
               glDrawElements(mode, count, type, indices);
           }
           instanceID = 0;
       }
..


.. note::


   :c:func:`glDrawElementsInstanced` is available only if the GL version is 3.1 or greater.


   ``GL_LINE_STRIP_ADJACENCY``\ ,
   ``GL_LINES_ADJACENCY``\ ,
   ``GL_TRIANGLE_STRIP_ADJACENCY`` and
   ``GL_TRIANGLES_ADJACENCY``
   are available only if the GL version is 3.2 or greater.


..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_ENUM`` is generated if *mode* is not one of ``GL_POINTS``\ , ``GL_LINE_STRIP``\ , ``GL_LINE_LOOP``\ , ``GL_LINES``\ , ``GL_TRIANGLE_STRIP``\ , ``GL_TRIANGLE_FAN``\ , or ``GL_TRIANGLES``\ .
* ``GL_INVALID_VALUE`` is generated if *count* or *primcount* are negative.
* ``GL_INVALID_OPERATION`` is generated if a geometry shader is active and *mode* is incompatible with the input primitive type of the geometry shader in the currently installed program object.
* ``GL_INVALID_OPERATION`` is generated if a non-zero buffer object name is bound to an enabled array and the buffer object's data store is currently mapped.


.. -----------------------------------------------------------------------------

.. <foot 'glDrawElementsInstanced'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )2010 Khronos Group. Open Publication License.

