.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:29
.. *****************************************************************************

.. following information was extracted from file 'man4/glDepthFunc.xml'
.. (c)1991-2006 Silicon Graphics, Inc.
.. See license details at http://oss.sgi.com/projects/FreeB/


.. currentmodule:: OpenGL.man4

function `glDepthFunc`
----------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Specify the value used for depth buffer comparisons

.. c:function:: glDepthFunc


         :param func:

                  Specifies the depth comparison function.
                  Symbolic constants
                  ``GL_NEVER``\ ,
                  ``GL_LESS``\ ,
                  ``GL_EQUAL``\ ,
                  ``GL_LEQUAL``\ ,
                  ``GL_GREATER``\ ,
                  ``GL_NOTEQUAL``\ ,
                  ``GL_GEQUAL``\ , and
                  ``GL_ALWAYS`` are accepted.
                  The initial value is ``GL_LESS``\ .

.. rubric:: Specification

.. c:function:: void glDepthFunc(GLenum  func)
   :noindex: 


.. seealso::


            :c:func:`glDepthRange`\ ,
            :c:func:`glEnable`\ ,
            :c:func:`glPolygonOffset`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glDepthFunc` specifies the function used to compare each incoming pixel depth value
with the depth value present in the depth buffer.
The comparison is performed only if depth testing is enabled.
(See :c:func:`glEnable` and :c:func:`glDisable` of ``GL_DEPTH_TEST``\ .)


*func* specifies the conditions under which the pixel will be drawn.
The comparison functions are as follows:


         ``GL_NEVER``


               Never passes.


         ``GL_LESS``


               Passes if the incoming depth value is less than the stored depth value.


         ``GL_EQUAL``


               Passes if the incoming depth value is equal to the stored depth value.


         ``GL_LEQUAL``


               Passes if the incoming depth value is less than or equal to
               the stored depth value.


         ``GL_GREATER``


               Passes if the incoming depth value is greater than the stored depth value.


         ``GL_NOTEQUAL``


               Passes if the incoming depth value is not equal to the stored depth value.


         ``GL_GEQUAL``


               Passes if the incoming depth value is greater than or equal to
               the stored depth value.


         ``GL_ALWAYS``


               Always passes.


The initial value of *func* is ``GL_LESS``\ .
Initially, depth testing is disabled.  If depth testing is disabled or if no
depth buffer exists, it is as if the depth test always passes.


.. note::


   Even if the depth buffer exists and the depth mask is non-zero, the
   depth buffer is not updated if the depth test is disabled. In order to
   unconditionally write to the depth buffer, the depth test should be enabled
   and set to ``GL_ALWAYS``\ .


..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_ENUM`` is generated if *func* is not an accepted value.


.. -----------------------------------------------------------------------------

**Associated Gets:**

* :c:func:`glGet` with argument ``GL_DEPTH_FUNC``
* :c:func:`glIsEnabled` with argument ``GL_DEPTH_TEST``


.. -----------------------------------------------------------------------------

.. <foot 'glDepthFunc'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )1991-2006 Silicon Graphics, Inc. SGI Free Software B License.

