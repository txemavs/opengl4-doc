.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:29
.. *****************************************************************************

.. following information was extracted from file 'man4/glDrawTransformFeedbackStreamInstanced.xml'
.. (c)2010-2011 Khronos Group.
.. See license details at http://opencontent.org/openpub/


.. currentmodule:: OpenGL.man4

function `glDrawTransformFeedbackStreamInstanced`
-------------------------------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Render multiple instances of primitives using a count derived from a specifed stream of a transform feedback object

.. c:function:: glDrawTransformFeedbackStreamInstanced


         :param mode:

                  Specifies what kind of primitives to render.
                  Symbolic constants
                  ``GL_POINTS``\ ,
                  ``GL_LINE_STRIP``\ ,
                  ``GL_LINE_LOOP``\ ,
                  ``GL_LINES``\ ,
                  ``GL_LINE_STRIP_ADJACENCY``\ ,
                  ``GL_LINES_ADJACENCY``\ ,
                  ``GL_TRIANGLE_STRIP``\ ,
                  ``GL_TRIANGLE_FAN``\ ,
                  ``GL_TRIANGLES``\ ,
                  ``GL_TRIANGLE_STRIP_ADJACENCY``\ ,
                  ``GL_TRIANGLES_ADJACENCY``\ , and
                  ``GL_PATCHES``
                  are accepted.

         :param id:

                  Specifies the name of a transform feedback object from which to retrieve a primitive count.

         :param stream:

                  Specifies the index of the transform feedback stream from which to retrieve a primitive count.

         :param primcount:

                  Specifies the number of instances of the geometry to render.

.. rubric:: Specification

.. c:function:: void glDrawTransformFeedbackStreamInstanced(GLenum  mode, GLuint  id, GLuint  stream, GLsizei  primcount)
   :noindex: 


.. seealso::


            :c:func:`glDrawArrays`\ ,
            :c:func:`glDrawArraysInstanced`\ ,
            :c:func:`glDrawElements`\ ,
            :c:func:`glDrawRangeElements`\ ,
            :c:func:`glDrawTransformFeedback`\ ,
            :c:func:`glDrawTransformFeedbackStream`\ .


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glDrawTransformFeedbackStreamInstanced` draws multiple copies of a range of primitives of a type specified by *mode* using
a count retrieved from the transform feedback stream specified by *stream* of the transform feedback object
specified by *id*\ . Calling :c:func:`glDrawTransformFeedbackStreamInstanced`
is equivalent to calling :c:func:`glDrawArraysInstanced` with *mode*
and *primcount* as specified, *first* set to zero, and *count* set to the number of vertices captured
on vertex stream *stream* the last time transform feedback was active on the transform feedback object named
by *id*\ .


Calling :c:func:`glDrawTransformFeedbackInstanced` is equivalent to calling :c:func:`glDrawTransformFeedbackStreamInstanced`
with *stream* set to zero.


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_ENUM`` is generated if *mode* is not an accepted value.
* ``GL_INVALID_VALUE`` is generated if *id* is not the name of a transform feedback object.
* ``GL_INVALID_VALUE`` is generated if *stream* is greater than or equal to the value of ``GL_MAX_VERTEX_STREAMS``\ .
* ``GL_INVALID_OPERATION`` is generated if a non-zero buffer object name is bound to an enabled array and the buffer object's data store is currently mapped.
* ``GL_INVALID_OPERATION`` is generated if a geometry shader is active and *mode* is incompatible with the input primitive type of the geometry shader in the currently installed program object.
* ``GL_INVALID_OPERATION`` is generated if *mode* is ``GL_PATCHES`` and no tessellation control shader is active.
* ``GL_INVALID_OPERATION`` is generated if :c:func:`glEndTransformFeedback` has never been called while the transform feedback object named by *id* was bound.


.. -----------------------------------------------------------------------------

.. <foot 'glDrawTransformFeedbackStreamInstanced'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )2010-2011 Khronos Group. Open Publication License.

