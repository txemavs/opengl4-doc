.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:29
.. *****************************************************************************

.. following information was extracted from file 'man4/glGetSamplerParameter.xml'
.. (c)2010 Khronos Group.
.. See license details at http://opencontent.org/openpub/


.. currentmodule:: OpenGL.man4

function `glGetSamplerParameter`
--------------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Return sampler parameter values

.. c:function:: glGetSamplerParameter


         :param sampler:

                  Specifies name of the sampler object from which to retrieve parameters.

         :param pname:

                  Specifies the symbolic name of a sampler parameter.
                  ``GL_TEXTURE_MAG_FILTER``\ ,
                  ``GL_TEXTURE_MIN_FILTER``\ ,
                  ``GL_TEXTURE_MIN_LOD``\ ,
                  ``GL_TEXTURE_MAX_LOD``\ ,
                  ``GL_TEXTURE_LOD_BIAS``\ ,
                  ``GL_TEXTURE_WRAP_S``\ ,
                  ``GL_TEXTURE_WRAP_T``\ ,
                  ``GL_TEXTURE_WRAP_R``\ ,
                  ``GL_TEXTURE_BORDER_COLOR``\ ,
                  ``GL_TEXTURE_COMPARE_MODE``\ , and
                  ``GL_TEXTURE_COMPARE_FUNC``
                  are accepted.

         :param params:

                  Returns the sampler parameters.

.. rubric:: Specification

.. c:function:: void glGetSamplerParameterfv(GLuint  sampler, GLenum  pname, GLfloat *  params, GLuint  sampler, GLenum  pname, GLint *  params)


.. seealso::


            :c:func:`glSamplerParameter`\ ,
            :c:func:`glGenSamplers`\ ,
            :c:func:`glDeleteSamplers`\ ,
            :c:func:`glSamplerParameter`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glGetSamplerParameter` returns in *params* the value or values of the sampler parameter
specified as *pname*\ .
*sampler* defines the target sampler, and must be the name of an existing sampler object, returned from a previous call
to :c:func:`glGenSamplers`\ .
*pname* accepts the same symbols as :c:func:`glSamplerParameter`\ ,
with the same interpretations:


         ``GL_TEXTURE_MAG_FILTER``


               Returns the single-valued texture magnification filter,
               a symbolic constant. The initial value is ``GL_LINEAR``\ .


         ``GL_TEXTURE_MIN_FILTER``


               Returns the single-valued texture minification filter,
               a symbolic constant. The initial value is ``GL_NEAREST_MIPMAP_LINEAR``\ .


         ``GL_TEXTURE_MIN_LOD``


               Returns the single-valued texture minimum level-of-detail value.  The
               initial value is
               |EQUATION_1_|\ .


         ``GL_TEXTURE_MAX_LOD``


               Returns the single-valued texture maximum level-of-detail value. The
               initial value is 1000.


         ``GL_TEXTURE_WRAP_S``


               Returns the single-valued wrapping function for texture coordinate
               |EQUATION_2_|\ ,
               a symbolic constant. The initial value is ``GL_REPEAT``\ .


         ``GL_TEXTURE_WRAP_T``


               Returns the single-valued wrapping function for texture coordinate
               |EQUATION_3_|\ ,
               a symbolic constant. The initial value is ``GL_REPEAT``\ .


         ``GL_TEXTURE_WRAP_R``


               Returns the single-valued wrapping function for texture coordinate
               |EQUATION_4_|\ ,
               a symbolic constant. The initial value is ``GL_REPEAT``\ .


         ``GL_TEXTURE_BORDER_COLOR``


               Returns four integer or floating-point numbers that comprise the RGBA color
               of the texture border.
               Floating-point values are returned in the range
               |EQUATION_5_|\ .
               Integer values are returned as a linear mapping of the internal floating-point
               representation such that 1.0 maps to the most positive representable
               integer and |EQUATION_6_| maps to the most negative representable
               integer. The initial value is (0, 0, 0, 0).


         ``GL_TEXTURE_COMPARE_MODE``


               Returns a single-valued texture comparison mode, a symbolic constant.  The
               initial value is ``GL_NONE``\ . See :c:func:`glSamplerParameter`\ .


         ``GL_TEXTURE_COMPARE_FUNC``


               Returns a single-valued texture comparison function, a symbolic constant.  The
               initial value is ``GL_LEQUAL``\ . See :c:func:`glSamplerParameter`\ .


.. note::


   If an error is generated,
   no change is made to the contents of *params*\ .


   :c:func:`glGetSamplerParameter` is available only if the GL version is 3.3 or higher.


..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_VALUE`` is generated if *sampler* is not the name of a sampler object returned from a previous call to :c:func:`glGenSamplers`\ .
* ``GL_INVALID_ENUM`` is generated if *pname* is not an accepted value.


.. -----------------------------------------------------------------------------

.. <foot 'glGetSamplerParameter'>

.. role:: mml(raw)
   :format: html

.. |EQUATION_1_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mn>-1000</mn></math>` 

.. |EQUATION_2_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_3_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">t</mi></math>` 

.. |EQUATION_4_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_5_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mfenced open="[" close="]"><mn>0</mn><mn>1</mn></mfenced></math>` 

.. |EQUATION_6_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mn>-1.0</mn></math>` 

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )2010 Khronos Group. Open Publication License.

