.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:28
.. *****************************************************************************

.. following information was extracted from file 'man4/glCopyBufferSubData.xml'
.. (c)2010 Khronos Group.
.. See license details at http://opencontent.org/openpub/


.. currentmodule:: OpenGL.man4

function `glCopyBufferSubData`
------------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Copy part of the data store of a buffer object to the data store of another buffer object

.. c:function:: glCopyBufferSubData


         :param readtarget:

                  Specifies the target from whose data store data should be read.

         :param writetarget:

                  Specifies the target to whose data store data should be written.

         :param readoffset:

                  Specifies the offset, in basic machine units, within the data store of *readtarget* from which data should be read.

         :param writeoffset:

                  Specifies the offset, in basic machine units, within the data store of *writetarget* to which data should be written.

         :param size:

                  Specifies the size, in basic machine units, of the data to be copied from *readtarget* to *writetarget*\ .

.. rubric:: Specification

.. c:function:: void glCopyBufferSubData(GLenum  readtarget, GLenum  writetarget, GLintptr  readoffset, GLintptr  writeoffset, GLsizeiptr  size)
   :noindex: 


.. seealso::


            :c:func:`glGenBuffers`\ ,
            :c:func:`glBindBuffer`\ ,
            :c:func:`glBufferData`\ ,
            :c:func:`glBufferSubData`\ ,
            :c:func:`glGetBufferSubData`


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glCopyBufferSubData` copies part of the data store attached to *readtarget* to the
data store attached to *writetarget*\ . The number of basic machine units indicated by *size*
is copied from the source, at offset *readoffset* to the destination at *writeoffset*\ ,
also in basic machine units.


*readtarget* and *writetarget* must be ``GL_ARRAY_BUFFER``\ ,
``GL_COPY_READ_BUFFER``\ , ``GL_COPY_WRITE_BUFFER``\ , ``GL_ELEMENT_ARRAY_BUFFER``\ ,
``GL_PIXEL_PACK_BUFFER``\ , ``GL_PIXEL_UNPACK_BUFFER``\ , ``GL_TEXTURE_BUFFER``\ ,
``GL_TRANSFORM_FEEDBACK_BUFFER`` or ``GL_UNIFORM_BUFFER``\ . Any of these targets may be used,
although the targets ``GL_COPY_READ_BUFFER`` and ``GL_COPY_WRITE_BUFFER`` are provided
specifically to allow copies between buffers without disturbing other GL state.


*readoffset*\ , *writeoffset* and *size* must all be greater than or equal to
zero. Furthermore, *readoffset* + *size* must not exceeed the size of the buffer
object bound to *readtarget*\ , and *readoffset* + *size* must not exceeed the
size of the buffer bound to *writetarget*\ . If the same buffer object is bound to both *readtarget*
and *writetarget*\ , then the ranges specified by *readoffset*\ , *writeoffset*
and *size* must not overlap.


.. note::


   :c:func:`glCopyBufferSubData` is available only if the GL version is 3.1 or greater.


..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_VALUE`` is generated if any of *readoffset*\ , *writeoffset* or *size* is negative, if *readoffset* + *size* exceeds the size of the buffer object bound to *readtarget* or if *writeoffset* + *size* exceeds the size of the buffer object bound to *writetarget*\ .
* ``GL_INVALID_VALUE`` is generated if the same buffer object is bound to both *readtarget* and *writetarget* and the ranges [\ *readoffset*\ , *readoffset* + *size*\ ) and [\ *writeoffset*\ , *writeoffset* + *size*\ ) overlap.
* ``GL_INVALID_OPERATION`` is generated if zero is bound to *readtarget* or *writetarget*\ .
* ``GL_INVALID_OPERATION`` is generated if the buffer object bound to either *readtarget* or *writetarget* is mapped.


.. -----------------------------------------------------------------------------

.. <foot 'glCopyBufferSubData'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )2010 Khronos Group. Open Publication License.

