.. nabla.docbook2sphinx project, generated 2012-07-08 18:15:28
.. *****************************************************************************

.. following information was extracted from file 'man4/glBindBufferRange.xml'
.. (c)2010-2011 Khronos Group.
.. See license details at http://opencontent.org/openpub/


.. currentmodule:: OpenGL.man4

function `glBindBufferRange`
----------------------------

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   Version 4 Vol. 3G

Bind a range within a buffer object to an indexed buffer target

.. c:function:: glBindBufferRange


         :param target:

                  Specify the target of the bind operation. *target* must be
                  one of ``GL_ATOMIC_COUNTER_BUFFER``\ ,
                  ``GL_TRANSFORM_FEEDBACK_BUFFER`` or ``GL_UNIFORM_BUFFER``\ .

         :param index:

                  Specify the index of the binding point within the array specified by *target*\ .

         :param buffer:

                  The name of a buffer object to bind to the specified binding point.

         :param offset:

                  The starting offset in basic machine units into the buffer object *buffer*\ .

         :param size:

                  The amount of data in machine units that can be read from the buffet object while used as an indexed target.

.. rubric:: Specification

.. c:function:: void glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
   :noindex: 


.. seealso::


            :c:func:`glGenBuffers`\ ,
            :c:func:`glDeleteBuffers`\ ,
            :c:func:`glBindBuffer`\ ,
            :c:func:`glBindBufferBase`\ ,
            :c:func:`glMapBuffer`\ ,
            :c:func:`glUnmapBuffer`\ ,


..


.. -----------------------------------------------------------------------------

.. rubric:: Description

..


:c:func:`glBindBufferRange` binds a range the buffer object *buffer*
represented by *offset* and *size* to the
binding point at index *index* of the array of targets specified by *target*\ .
Each *target* represents an indexed array of buffer binding points, as well
as a single general binding point that can be used by other buffer manipulation functions such as
:c:func:`glBindBuffer` or
:c:func:`glMapBuffer`\ . In addition to binding
a range of *buffer* to the indexed buffer binding target, :c:func:`glBindBufferRange`
also binds the range to the generic buffer binding point specified by *target*\ .


*offset* specifies the offset in basic machine units into the buffer object
*buffer* and *size* specifies the amount of data that
can be read from the buffer object while used as an indexed target.


.. note::


   The ``GL_ATOMIC_COUNTER_BUFER`` target is available only if the GL version is 4.2 or greater.


..


.. -----------------------------------------------------------------------------

**Errors:**

* ``GL_INVALID_ENUM`` is generated if *target* is not one of ``GL_ATOMIC_COUNTER_BUFFER``\ , ``GL_TRANSFORM_FEEDBACK_BUFFER`` or ``GL_UNIFORM_BUFFER``\ .
* ``GL_INVALID_VALUE`` is generated if *index* is greater than or equal to the number of *target* -specific indexed binding points.
* ``GL_INVALID_VALUE`` is generated if *size* is less than or equal to zero, or if *offset* + *size* is greater than the value of ``GL_BUFFER_SIZE``\ .
* Additional errors may be generated if *offset* violates any *target* -specific alignmemt restrictions.


.. -----------------------------------------------------------------------------

.. <foot 'glBindBufferRange'>

.. <end foot>

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (\ c\ )2010-2011 Khronos Group. Open Publication License.

