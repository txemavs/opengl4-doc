.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glGetUniform`
-----------------------

.. source file man4/glGetUniform

.. currentmodule:: OpenGL.GL

Returns the value of a uniform variable

.. c:function:: glGetUniform
.. c:function:: void glGetUniformfv(GLuint  program, GLint  location, GLfloat * params, GLuint  program, GLint  location, GLint * params)


   
   :param program:
      Specifies the program object to be queried.
   
   :param location:
      Specifies the location of the uniform variable to be queried.
   
   :param params:
      Returns the value of the specified uniform variable.
   

.. seealso::

   
   :c:func:`glCreateProgram`, :c:func:`glLinkProgram`, :c:func:`glUniform`
   
.. rubric:: Description


:c:func:`glGetUniform` returns in *params* the value(s) of the specified uniform variable. The type of the uniform variable specified by *location* determines the number of values returned. If the uniform variable is defined in the shader as a boolean, int, or float, a single value will be returned. If it is defined as a vec2, ivec2, or bvec2, two values will be returned. If it is defined as a vec3, ivec3, or bvec3, three values will be returned, and so on. To query values stored in uniform variables declared as arrays, call :c:func:`glGetUniform` for each element of the array. To query values stored in uniform variables declared as structures, call :c:func:`glGetUniform` for each field in the structure. The values for uniform variables declared as a matrix will be returned in column major order.

The locations assigned to uniform variables are not known until the program object is linked. After linking has occurred, the command :c:func:`glGetUniformLocation` can be used to obtain the location of a uniform variable. This location value can then be passed to :c:func:`glGetUniform` in order to query the current value of the uniform variable. After a program object has been linked successfully, the index values for uniform variables remain fixed until the next link command occurs. The uniform variable values can only be queried after a link if the link was successful.


**Associated gets:**


   * :c:func:`glGetActiveUniform` with arguments *program* and the index of an active uniform variable
   * :c:func:`glGetProgram` with arguments *program* and ``GL_ACTIVE_UNIFORMS`` or ``GL_ACTIVE_UNIFORM_MAX_LENGTH``
   * :c:func:`glGetUniformLocation` with arguments *program* and the name of a uniform variable
   * :c:func:`glIsProgram`

**Errors:**

   * ``GL_INVALID_VALUE`` is generated if *program* is not a value generated by OpenGL.
   * ``GL_INVALID_OPERATION`` is generated if *program* is not a program object.
   * ``GL_INVALID_OPERATION`` is generated if *program* has not been successfully linked.
   * ``GL_INVALID_OPERATION`` is generated if *location* does not correspond to a valid uniform variable location for the specified program object.



.. note::

   * If an error is generated, no change is made to the contents of *params* .



.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

