.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glClampColor`
-----------------------

.. source file man4/glClampColor

.. currentmodule:: OpenGL.GL

Specify whether data read via 

.. c:function:: glClampColor
.. c:function:: void glClampColor(GLenum  target, GLenum  clamp)
   :noindex: 


   
   :param target:
      Target for color clamping. *target* must be ``GL_CLAMP_READ_COLOR``.
   
   :param clamp:
      Specifies whether to apply color clamping. *clamp* must be ``GL_TRUE`` or ``GL_FALSE``.
   

.. rubric:: Description


:c:func:`glClampColor` controls color clamping that is performed during :c:func:`glReadPixels`. *target* must be ``GL_CLAMP_READ_COLOR``. If *clamp* is ``GL_TRUE``, read color clamping is enabled; if *clamp* is ``GL_FALSE``, read color clamping is disabled. If *clamp* is ``GL_FIXED_ONLY``, read color clamping is enabled only if the selected read buffer has fixed point components and disabled otherwise.


**Associated gets:**


   * :c:func:`glGet` with argument ``GL_CLAMP_READ_COLOR``.

**Errors:**

   * ``GL_INVALID_ENUM`` is generated if *target* is not ``GL_CLAMP_READ_COLOR``.
   * ``GL_INVALID_ENUM`` is generated if *clamp* is not ``GL_TRUE`` or ``GL_FALSE``.


.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

