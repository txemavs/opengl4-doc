.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glDeleteProgram`
--------------------------

.. source file man4/glDeleteProgram

.. currentmodule:: OpenGL.GL

Deletes a program object

.. c:function:: glDeleteProgram
.. c:function:: void glDeleteProgram(GLuint  program)
   :noindex: 


   
   :param program:
      Specifies the program object to be deleted.
   

.. seealso::

   
   :c:func:`glCreateShader`, :c:func:`glDetachShader`, :c:func:`glUseProgram`
   
.. rubric:: Description


:c:func:`glDeleteProgram` frees the memory and invalidates the name associated with the program object specified by *program.* This command effectively undoes the effects of a call to :c:func:`glCreateProgram`.

If a program object is in use as part of current rendering state, it will be flagged for deletion, but it will not be deleted until it is no longer part of current state for any rendering context. If a program object to be deleted has shader objects attached to it, those shader objects will be automatically detached but not deleted unless they have already been flagged for deletion by a previous call to :c:func:`glDeleteShader`. A value of 0 for *program* will be silently ignored.

To determine whether a program object has been flagged for deletion, call :c:func:`glGetProgram` with arguments *program* and ``GL_DELETE_STATUS``.


**Associated gets:**


   * :c:func:`glGet` with argument ``GL_CURRENT_PROGRAM``
   * :c:func:`glGetProgram` with arguments *program* and ``GL_DELETE_STATUS``
   * :c:func:`glIsProgram`

**Errors:**

   * ``GL_INVALID_VALUE`` is generated if *program* is not a value generated by OpenGL.


.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

