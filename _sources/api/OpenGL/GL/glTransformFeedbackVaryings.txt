.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glTransformFeedbackVaryings`
--------------------------------------

.. source file man4/glTransformFeedbackVaryings

.. currentmodule:: OpenGL.GL

Specify values to record in transform feedback buffers

.. c:function:: glTransformFeedbackVaryings
.. c:function:: void glTransformFeedbackVaryings(GLuint program, GLsizei count, const char ** varyings, GLenum bufferMode)
   :noindex: 


   
   :param program:
      The name of the target program object.
   
   :param count:
      The number of varying variables used for transform feedback.
   
   :param varyings:
      An array of *count* zero-terminated strings specifying the names of the varying variables to use for transform feedback.
   
   :param bufferMode:
      Identifies the mode used to capture the varying variables when transform feedback is active. *bufferMode* must be ``GL_INTERLEAVED_ATTRIBS`` or ``GL_SEPARATE_ATTRIBS``.
   

.. seealso::

   
   :c:func:`glBeginTransformFeedback`, :c:func:`glEndTransformFeedback`, :c:func:`glGetTransformFeedbackVarying`
   
.. rubric:: Description


The names of the vertex or geometry shader outputs to be recorded in transform feedback mode are specified using :c:func:`glTransformFeedbackVaryings`. When a geometry shader is active, transform feedback records the values of selected geometry shader output variables from the emitted vertices. Otherwise, the values of the selected vertex shader outputs are recorded.

The state set by :c:func:`glTranformFeedbackVaryings` is stored and takes effect next time :c:func:`glLinkProgram` is called on *program* . When :c:func:`glLinkProgram` is called, *program* is linked so that the values of the specified varying variables for the vertices of each primitive generated by the GL are written to a single buffer object if *bufferMode* is ``GL_INTERLEAVED_ATTRIBS`` or multiple buffer objects if *bufferMode* is ``GL_SEPARATE_ATTRIBS``.

In addition to the errors generated by :c:func:`glTransformFeedbackVaryings`, the program *program* will fail to link if: 
 
   - The count specified by :c:func:`glTransformFeedbackVaryings` is non-zero, but the program object has no vertex or geometry shader. 
   - Any variable name specified in the *varyings* array is not declared as an output in the vertex shader (or the geometry shader, if active). 
   - Any two entries in the *varyings* array specify the same varying variable. 
   - The total number of components to capture in any varying variable in *varyings* is greater than the constant ``GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS`` and the buffer mode is ``GL_SEPARATE_ATTRIBS``. 
   - The total number of components to capture is greater than the constant ``GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS`` and the buffer mode is ``GL_INTERLEAVED_ATTRIBS``. 


**Associated gets:**


   * :c:func:`glGetTransformFeedbackVarying`

**Errors:**

   * ``GL_INVALID_VALUE`` is generated if *program* is not the name of a program object.
   * ``GL_INVALID_VALUE`` is generated if *bufferMode* is ``GL_SEPARATE_ATTRIBS`` and *count* is greater than the implementation-dependent limit ``GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS``.



.. note::

   * :c:func:`glGetTransformFeedbackVarying` is available only if the GL version is 3.0 or greater.



.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

