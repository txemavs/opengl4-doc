.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glEdgeFlag`
---------------------

.. source file man/glEdgeFlag

.. currentmodule:: OpenGL.GL

Flag edges as either boundary or nonboundary

.. c:function:: glEdgeFlag
.. c:function:: void glEdgeFlag(GLboolean  flag)
   :noindex: 


   
   :param flag:
      Specifies the current edge flag value, either ``GL_TRUE`` or ``GL_FALSE``. The initial value is ``GL_TRUE``.
   
.. c:function:: void glEdgeFlagv(const GLboolean *  flag)


   
   :param flag:
      Specifies a pointer to an array that contains a single boolean element, which replaces the current edge flag value.
   

.. seealso::

   
   :c:func:`glBegin`, :c:func:`glEdgeFlagPointer`, :c:func:`glPolygonMode`
   
.. rubric:: Description


Each vertex of a polygon, separate triangle, or separate quadrilateral specified between a :c:func:`glBegin`/:c:func:`glEnd` pair is marked as the start of either a boundary or nonboundary edge. If the current edge flag is true when the vertex is specified, the vertex is marked as the start of a boundary edge. Otherwise, the vertex is marked as the start of a nonboundary edge. :c:func:`glEdgeFlag` sets the edge flag bit to ``GL_TRUE`` if *flag* is ``GL_TRUE`` and to ``GL_FALSE`` otherwise.

The vertices of connected triangles and connected quadrilaterals are always marked as boundary, regardless of the value of the edge flag.

Boundary and nonboundary edge flags on vertices are significant only if ``GL_POLYGON_MODE`` is set to ``GL_POINT`` or ``GL_LINE``. See :c:func:`glPolygonMode`.


**Associated gets:**


   * :c:func:`glGet` with argument ``GL_EDGE_FLAG``



.. note::

   * The current edge flag can be updated at any time. In particular, :c:func:`glEdgeFlag` can be called between a call to :c:func:`glBegin` and the corresponding call to :c:func:`glEnd`.



.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

