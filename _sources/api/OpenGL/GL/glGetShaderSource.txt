.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glGetShaderSource`
----------------------------

.. source file man4/glGetShaderSource

.. currentmodule:: OpenGL.GL

Returns the source code string from a shader object

.. c:function:: glGetShaderSource
.. c:function:: void glGetShaderSource(GLuint  shader, GLsizei  bufSize, GLsizei * length, GLchar * source)
   :noindex: 


   
   :param shader:
      Specifies the shader object to be queried.
   
   :param bufSize:
      Specifies the size of the character buffer for storing the returned source code string.
   
   :param length:
      Returns the length of the string returned in *source* (excluding the null terminator).
   
   :param source:
      Specifies an array of characters that is used to return the source code string.
   

.. seealso::

   
   :c:func:`glCreateShader`, :c:func:`glShaderSource`
   
.. rubric:: Description


:c:func:`glGetShaderSource` returns the concatenation of the source code strings from the shader object specified by *shader* . The source code strings for a shader object are the result of a previous call to :c:func:`glShaderSource`. The string returned by the function will be null terminated.

:c:func:`glGetShaderSource` returns in *source* as much of the source code string as it can, up to a maximum of *bufSize* characters. The number of characters actually returned, excluding the null termination character, is specified by *length* . If the length of the returned string is not required, a value of ``NULL`` can be passed in the *length* argument. The size of the buffer required to store the returned source code string can be obtained by calling :c:func:`glGetShader` with the value ``GL_SHADER_SOURCE_LENGTH``.


**Associated gets:**


   * :c:func:`glGetShader` with argument ``GL_SHADER_SOURCE_LENGTH``
   * :c:func:`glIsShader`

**Errors:**

   * ``GL_INVALID_VALUE`` is generated if *shader* is not a value generated by OpenGL.
   * ``GL_INVALID_OPERATION`` is generated if *shader* is not a shader object.
   * ``GL_INVALID_VALUE`` is generated if *bufSize* is less than 0.


.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

