.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glGetAttachedShaders`
-------------------------------

.. source file man4/glGetAttachedShaders

.. currentmodule:: OpenGL.GL

Returns the handles of the shader objects attached to a program object

.. c:function:: glGetAttachedShaders
.. c:function:: void glGetAttachedShaders(GLuint  program, GLsizei  maxCount, GLsizei * count, GLuint * shaders)
   :noindex: 


   
   :param program:
      Specifies the program object to be queried.
   
   :param maxCount:
      Specifies the size of the array for storing the returned object names.
   
   :param count:
      Returns the number of names actually returned in *objects* .
   
   :param shaders:
      Specifies an array that is used to return the names of attached shader objects.
   

.. seealso::

   
   . :c:func:`glAttachShader`, :c:func:`glDetachShader`
   
.. rubric:: Description


:c:func:`glGetAttachedShaders` returns the names of the shader objects attached to *program* . The names of shader objects that are attached to *program* will be returned in *shaders.* The actual number of shader names written into *shaders* is returned in *count.* If no shader objects are attached to *program* , *count* is set to 0. The maximum number of shader names that may be returned in *shaders* is specified by *maxCount* .

If the number of names actually returned is not required (for instance, if it has just been obtained by calling :c:func:`glGetProgram`), a value of ``NULL`` may be passed for count. If no shader objects are attached to *program* , a value of 0 will be returned in *count* . The actual number of attached shaders can be obtained by calling :c:func:`glGetProgram` with the value ``GL_ATTACHED_SHADERS``.


**Associated gets:**


   * :c:func:`glGetProgram` with argument ``GL_ATTACHED_SHADERS``
   * :c:func:`glIsProgram`

**Errors:**

   * ``GL_INVALID_VALUE`` is generated if *program* is not a value generated by OpenGL.
   * ``GL_INVALID_OPERATION`` is generated if *program* is not a program object.
   * ``GL_INVALID_VALUE`` is generated if *maxCount* is less than 0.


.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

