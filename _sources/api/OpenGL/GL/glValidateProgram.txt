.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glValidateProgram`
----------------------------

.. source file man4/glValidateProgram

.. currentmodule:: OpenGL.GL

Validates a program object

.. c:function:: glValidateProgram
.. c:function:: void glValidateProgram(GLuint  program)
   :noindex: 


   
   :param program:
      Specifies the handle of the program object to be validated.
   

.. seealso::

   
   :c:func:`glLinkProgram`, :c:func:`glUseProgram`
   
.. rubric:: Description


:c:func:`glValidateProgram` checks to see whether the executables contained in *program* can execute given the current OpenGL state. The information generated by the validation process will be stored in *program* 's information log. The validation information may consist of an empty string, or it may be a string containing information about how the current program object interacts with the rest of current OpenGL state. This provides a way for OpenGL implementers to convey more information about why the current program is inefficient, suboptimal, failing to execute, and so on.

The status of the validation operation will be stored as part of the program object's state. This value will be set to ``GL_TRUE`` if the validation succeeded, and ``GL_FALSE`` otherwise. It can be queried by calling :c:func:`glGetProgram` with arguments *program* and ``GL_VALIDATE_STATUS``. If validation is successful, *program* is guaranteed to execute given the current state. Otherwise, *program* is guaranteed to not execute.

This function is typically useful only during application development. The informational string stored in the information log is completely implementation dependent; therefore, an application should not expect different OpenGL implementations to produce identical information strings.


**Associated gets:**


   * :c:func:`glGetProgram` with arguments *program* and ``GL_VALIDATE_STATUS``
   * :c:func:`glGetProgramInfoLog` with argument *program*
   * :c:func:`glIsProgram`

**Errors:**

   * ``GL_INVALID_VALUE`` is generated if *program* is not a value generated by OpenGL.
   * ``GL_INVALID_OPERATION`` is generated if *program* is not a program object.



.. note::

   * This function mimics the validation operation that OpenGL implementations must perform when rendering commands are issued while programmable shaders are part of current state. The error ``GL_INVALID_OPERATION`` will be generated by any command that triggers the rendering of geometry if:
   * any two active samplers in the current program object are of different types, but refer to the same texture image unit,
   * the number of active samplers in the program exceeds the maximum number of texture image units allowed.
   * It may be difficult or cause a performance degradation for applications to catch these errors when rendering commands are issued. Therefore, applications are advised to make calls to :c:func:`glValidateProgram` to detect these issues during application development.



.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

