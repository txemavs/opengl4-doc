.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glColorMaterial`
--------------------------

.. source file man/glColorMaterial

.. currentmodule:: OpenGL.GL

Cause a material color to track the current color

.. c:function:: glColorMaterial
.. c:function:: void glColorMaterial(GLenum  face, GLenum  mode)
   :noindex: 


   
   :param face:
      Specifies whether front, back, or both front and back material parameters should track the current color. Accepted values are ``GL_FRONT``, ``GL_BACK``, and ``GL_FRONT_AND_BACK``. The initial value is ``GL_FRONT_AND_BACK``.
   
   :param mode:
      Specifies which of several material parameters track the current color. Accepted values are ``GL_EMISSION``, ``GL_AMBIENT``, ``GL_DIFFUSE``, ``GL_SPECULAR``, and ``GL_AMBIENT_AND_DIFFUSE``. The initial value is ``GL_AMBIENT_AND_DIFFUSE``.
   

.. seealso::

   
   :c:func:`glColor`, :c:func:`glColorPointer`, :c:func:`glDrawArrays`, :c:func:`glDrawElements`, :c:func:`glDrawRangeElements`, :c:func:`glEnable`, :c:func:`glLight`, :c:func:`glLightModel`, :c:func:`glMaterial`
   
.. rubric:: Description


:c:func:`glColorMaterial` specifies which material parameters track the current color. When ``GL_COLOR_MATERIAL`` is enabled, the material parameter or parameters specified by *mode* , of the material or materials specified by *face* , track the current color at all times.

To enable and disable ``GL_COLOR_MATERIAL``, call :c:func:`glEnable` and :c:func:`glDisable` with argument ``GL_COLOR_MATERIAL``. ``GL_COLOR_MATERIAL`` is initially disabled.


**Associated gets:**


   * :c:func:`glIsEnabled` with argument ``GL_COLOR_MATERIAL``
   * :c:func:`glGet` with argument ``GL_COLOR_MATERIAL_PARAMETER``
   * :c:func:`glGet` with argument ``GL_COLOR_MATERIAL_FACE``

**Errors:**

   * ``GL_INVALID_ENUM`` is generated if *face* or *mode* is not an accepted value.
   * ``GL_INVALID_OPERATION`` is generated if :c:func:`glColorMaterial` is executed between the execution of :c:func:`glBegin` and the corresponding execution of :c:func:`glEnd`.



.. note::

   * :c:func:`glColorMaterial` makes it possible to change a subset of material parameters for each vertex using only the :c:func:`glColor` command, without calling :c:func:`glMaterial`. If only such a subset of parameters is to be specified for each vertex, calling :c:func:`glColorMaterial` is preferable to calling :c:func:`glMaterial`.
   * Call :c:func:`glColorMaterial` before enabling ``GL_COLOR_MATERIAL``.
   * Calling :c:func:`glDrawElements`, :c:func:`glDrawArrays`, or :c:func:`glDrawRangeElements` may leave the current color indeterminate, if the color array is enabled. If :c:func:`glColorMaterial` is enabled while the current color is indeterminate, the lighting material state specified by *face* and *mode* is also indeterminate.
   * If the GL version is 1.1 or greater, and ``GL_COLOR_MATERIAL`` is enabled, evaluated color values affect the results of the lighting equation as if the current color were being modified, but no change is made to the tracking lighting parameter of the current color.



.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

