.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glQueryCounter`
-------------------------

.. source file man4/glQueryCounter

.. currentmodule:: OpenGL.GL

Record the GL time into a query object after all previous commands have reached the GL server but have not yet necessarily executed.

.. c:function:: glQueryCounter
.. c:function:: void glQueryCounter(GLuint  id, GLenum  target)
   :noindex: 


   
   :param id:
      Specify the name of a query object into which to record the GL time.
   
   :param target:
      Specify the counter to query. *target* must be ``GL_TIMESTAMP``.
   

.. seealso::

   
   :c:func:`glGenQueries`, :c:func:`glBeginQuery`, :c:func:`glEndQuery`, :c:func:`glDeleteQueries`, :c:func:`glGetQueryObject`, :c:func:`glGetQueryiv`, :c:func:`glGet`
   
.. rubric:: Description


:c:func:`glQueryCounter` causes the GL to record the current time into the query object named *id* . *target* must be ``GL_TIMESTAMP``. The time is recorded after all previous commands on the GL client and server state and the framebuffer have been fully realized. When the time is recorded, the query result for that object is marked available. :c:func:`glQueryCounter` timer queries can be used within a :c:func:`glBeginQuery` / :c:func:`glEndQuery` block where the target is ``GL_TIME_ELAPSED`` and it does not affect the result of that query object.


**Errors:**

   * ``GL_INVALID_OPERATION`` is generated if *id* is the name of a query object that is already in use within a :c:func:`glBeginQuery` / :c:func:`glEndQuery` block.
   * ``GL_INVALID_VALUE`` is generated if *id* is not the name of a query object returned from a previous call to :c:func:`glGenQueries`.
   * ``GL_INVALID_ENUM`` is generated if *target* is not ``GL_TIMESTAMP``.



.. note::

   * :c:func:`glQueryCounter` is available only if the GL version is 3.3 or higher.



.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

