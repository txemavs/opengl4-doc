.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glGetString`
----------------------

.. source file man4/glGetString

.. currentmodule:: OpenGL.GL

Return a string describing the current GL connection

.. c:function:: glGetString
.. c:function:: const GLubyte* glGetString(GLenum  name)
   :noindex: 


   
   :param name:
      Specifies a symbolic constant, one of ``GL_VENDOR``, ``GL_RENDERER``, ``GL_VERSION``, or ``GL_SHADING_LANGUAGE_VERSION``. Additionally, :c:func:`glGetStringi` accepts the ``GL_EXTENSIONS`` token.
   
   :param index:
      For :c:func:`glGetStringi`, specifies the index of the string to return.
   
.. c:function:: const GLubyte* glGetStringi(GLenum  name, GLuint  index)

.. rubric:: Description


:c:func:`glGetString` returns a pointer to a static string describing some aspect of the current GL connection. *name* can be one of the following:


   
   ``GL_VENDOR``
      Returns the company responsible for this GL implementation. This name does not change from release to release.
   
   ``GL_RENDERER``
      Returns the name of the renderer. This name is typically specific to a particular configuration of a hardware platform. It does not change from release to release.
   
   ``GL_VERSION``
      Returns a version or release number.
   
   ``GL_SHADING_LANGUAGE_VERSION``
      Returns a version or release number for the shading language.
   
:c:func:`glGetStringi` returns a pointer to a static string indexed by *index* . *name* can be one of the following:


   
   ``GL_EXTENSIONS``
      For :c:func:`glGetStringi` only, returns the extension string supported by the implementation at *index* .
   
Strings ``GL_VENDOR`` and ``GL_RENDERER`` together uniquely specify a platform. They do not change from release to release and should be used by platform-recognition algorithms.

The ``GL_VERSION`` and ``GL_SHADING_LANGUAGE_VERSION`` strings begin with a version number. The version number uses one of these forms:

*`major_number.minor_number`* *`major_number.minor_number.release_number`*

Vendor-specific information may follow the version number. Its format depends on the implementation, but a space always separates the version number and the vendor-specific information.

All strings are null-terminated.


**Errors:**

   * ``GL_INVALID_ENUM`` is generated if *name* is not an accepted value.
   * ``GL_INVALID_VALUE`` is generated by :c:func:`glGetStringi` if *index* is outside the valid range for indexed state *name* .



.. note::

   * If an error is generated, :c:func:`glGetString` returns 0.
   * The client and server may support different versions. :c:func:`glGetString` always returns a compatible version number. The release number always describes the server.



.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

