.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glRenderbufferStorage`
--------------------------------

.. source file man4/glRenderbufferStorage

.. currentmodule:: OpenGL.GL

Establish data storage, format and dimensions of a renderbuffer object's image

.. c:function:: glRenderbufferStorage
.. c:function:: void glRenderbufferStorage(GLenum  target, GLenum  internalformat, GLsizei  width, GLsizei  height)
   :noindex: 


   
   :param target:
      Specifies a binding to which the target of the allocation and must be ``GL_RENDERBUFFER``.
   
   :param internalformat:
      Specifies the internal format to use for the renderbuffer object's image.
   
   :param width:
      Specifies the width of the renderbuffer, in pixels.
   
   :param height:
      Specifies the height of the renderbuffer, in pixels.
   

.. seealso::

   
   :c:func:`glGenRenderbuffers`, :c:func:`glBindRenderbuffer`, :c:func:`glRenderbufferStorageMultisample`, :c:func:`glFramebufferRenderbuffer`, :c:func:`glDeleteRenderbuffers`
   
.. rubric:: Description


:c:func:`glRenderbufferStorage` is equivalent to calling :c:func:`glRenderbufferStorageMultisample` with the *samples* set to zero.

The target of the operation, specified by *target* must be ``GL_RENDERBUFFER``. *internalformat* specifies the internal format to be used for the renderbuffer object's storage and must be a color-renderable, depth-renderable, or stencil-renderable format. *width* and *height* are the dimensions, in pixels, of the renderbuffer. Both *width* and *height* must be less than or equal to the value of ``GL_MAX_RENDERBUFFER_SIZE``.

Upon success, :c:func:`glRenderbufferStorage` deletes any existing data store for the renderbuffer image and the contents of the data store after calling :c:func:`glRenderbufferStorage` are undefined.


**Errors:**

   * ``GL_INVALID_ENUM`` is generated if *target* is not ``GL_RENDERBUFFER``.
   * ``GL_INVALID_VALUE`` is generated if either of *width* or *height* is negative, or greater than the value of ``GL_MAX_RENDERBUFFER_SIZE``.
   * ``GL_INVALID_ENUM`` is generated if *internalformat* is not a color-renderable, depth-renderable, or stencil-renderable format.
   * ``GL_OUT_OF_MEMORY`` is generated if the GL is unable to create a data store of the requested size.


.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

