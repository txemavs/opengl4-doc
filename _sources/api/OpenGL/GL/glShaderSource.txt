.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glShaderSource`
-------------------------

.. source file man4/glShaderSource

.. currentmodule:: OpenGL.GL

Replaces the source code in a shader object

.. c:function:: glShaderSource
.. c:function:: void glShaderSource(GLuint  shader, GLsizei  count, const GLchar ** string, const GLint * length)
   :noindex: 


   
   :param shader:
      Specifies the handle of the shader object whose source code is to be replaced.
   
   :param count:
      Specifies the number of elements in the *string* and *length* arrays.
   
   :param string:
      Specifies an array of pointers to strings containing the source code to be loaded into the shader.
   
   :param length:
      Specifies an array of string lengths.
   

.. seealso::

   
   :c:func:`glCompileShader`, :c:func:`glCreateShader`, :c:func:`glDeleteShader`
   
.. rubric:: Description


:c:func:`glShaderSource` sets the source code in *shader* to the source code in the array of strings specified by *string* . Any source code previously stored in the shader object is completely replaced. The number of strings in the array is specified by *count* . If *length* is ``NULL``, each string is assumed to be null terminated. If *length* is a value other than ``NULL``, it points to an array containing a string length for each of the corresponding elements of *string* . Each element in the *length* array may contain the length of the corresponding string (the null character is not counted as part of the string length) or a value less than 0 to indicate that the string is null terminated. The source code strings are not scanned or parsed at this time; they are simply copied into the specified shader object.


**Associated gets:**


   * :c:func:`glGetShader` with arguments *shader* and ``GL_SHADER_SOURCE_LENGTH``
   * :c:func:`glGetShaderSource` with argument *shader*
   * :c:func:`glIsShader`

**Errors:**

   * ``GL_INVALID_VALUE`` is generated if *shader* is not a value generated by OpenGL.
   * ``GL_INVALID_OPERATION`` is generated if *shader* is not a shader object.
   * ``GL_INVALID_VALUE`` is generated if *count* is less than 0.



.. note::

   * OpenGL copies the shader source code strings when :c:func:`glShaderSource` is called, so an application may free its copy of the source code strings immediately after the function returns.



.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

