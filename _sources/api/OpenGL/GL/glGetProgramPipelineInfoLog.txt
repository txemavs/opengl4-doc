.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glGetProgramPipelineInfoLog`
--------------------------------------

.. source file man4/glGetProgramPipelineInfoLog

.. currentmodule:: OpenGL.GL

Retrieve the info log string from a program pipeline object

.. c:function:: glGetProgramPipelineInfoLog
.. c:function:: void glGetProgramPipelineInfoLog(GLuint  pipeline, GLsizei  bufSize, GLsizei * length, GLchar * infoLog)
   :noindex: 


   
   :param pipeline:
      Specifies the name of a program pipeline object from which to retrieve the info log.
   
   :param bufSize:
      Specifies the maximum number of characters, including the null terminator, that may be written into *infoLog* .
   
   :param length:
      Specifies the address of a variable into which will be written the number of characters written into *infoLog* .
   
   :param infoLog:
      Specifies the address of an array of characters into which will be written the info log for *pipeline* .
   

.. seealso::

   
   :c:func:`glGenProgramPipelines`, :c:func:`glBindProgramPipeline`, :c:func:`glDeleteProgramPipelines`, :c:func:`glGetProgramPipeline`
   
.. rubric:: Description


:c:func:`glGetProgramPipelineInfoLog` retrieves the info log for the program pipeline object *pipeline* . The info log, including its null terminator, is written into the array of characters whose address is given by *infoLog* . The maximum number of characters that may be written into *infoLog* is given by *bufSize* , and the actual number of characters written into *infoLog* is returned in the integer whose address is given by *length* . If *length* is ``NULL``, no length is returned.

The actual length of the info log for the program pipeline may be determined by calling :c:func:`glGetProgramPipeline` with *pname* set to ``GL_INFO_LOG_LENGTH``.


**Associated gets:**


   * :c:func:`glGetProgramPipeline` with parameter ``GL_INFO_LOG_LENGTH``.

**Errors:**

   * ``GL_INVALID_OPERATION`` is generated if *pipeline* is not a name previously returned from a call to :c:func:`glGenProgramPipelines` or if such a name has been deleted by a call to :c:func:`glDeleteProgramPipelines`.


.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

