.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glGetConvolutionParameter`
------------------------------------

.. source file man/glGetConvolutionParameter

.. currentmodule:: OpenGL.GL

Get convolution parameters

.. c:function:: glGetConvolutionParameter
.. c:function:: void glGetConvolutionParameterfv(GLenum  target, GLenum  pname, GLfloat *  params, GLenum  target, GLenum  pname, GLint *  params)


   
   :param target:
      The filter whose parameters are to be retrieved. Must be one of ``GL_CONVOLUTION_1D``, ``GL_CONVOLUTION_2D``, or ``GL_SEPARABLE_2D``.
   
   :param pname:
      The parameter to be retrieved. Must be one of ``GL_CONVOLUTION_BORDER_MODE``, ``GL_CONVOLUTION_BORDER_COLOR``, ``GL_CONVOLUTION_FILTER_SCALE``, ``GL_CONVOLUTION_FILTER_BIAS``, ``GL_CONVOLUTION_FORMAT``, ``GL_CONVOLUTION_WIDTH``, ``GL_CONVOLUTION_HEIGHT``, ``GL_MAX_CONVOLUTION_WIDTH``, or ``GL_MAX_CONVOLUTION_HEIGHT``.
   
   :param params:
      Pointer to storage for the parameters to be retrieved.
   

.. seealso::

   
   :c:func:`glGetConvolutionFilter`, :c:func:`glGetSeparableFilter`, :c:func:`glConvolutionParameter`
   
.. rubric:: Description


:c:func:`glGetConvolutionParameter` retrieves convolution parameters. *target* determines which convolution filter is queried. *pname* determines which parameter is returned:


   
   ``GL_CONVOLUTION_BORDER_MODE``
      The convolution border mode. See :c:func:`glConvolutionParameter` for a list of border modes.
   
   ``GL_CONVOLUTION_BORDER_COLOR``
      The current convolution border color. *params* must be a pointer to an array of four elements, which will receive the red, green, blue, and alpha border colors.
   
   ``GL_CONVOLUTION_FILTER_SCALE``
      The current filter scale factors. *params* must be a pointer to an array of four elements, which will receive the red, green, blue, and alpha filter scale factors in that order.
   
   ``GL_CONVOLUTION_FILTER_BIAS``
      The current filter bias factors. *params* must be a pointer to an array of four elements, which will receive the red, green, blue, and alpha filter bias terms in that order.
   
   ``GL_CONVOLUTION_FORMAT``
      The current internal format. See :c:func:`glConvolutionFilter1D`, :c:func:`glConvolutionFilter2D`, and :c:func:`glSeparableFilter2D` for lists of allowable formats.
   
   ``GL_CONVOLUTION_WIDTH``
      The current filter image width.
   
   ``GL_CONVOLUTION_HEIGHT``
      The current filter image height.
   
   ``GL_MAX_CONVOLUTION_WIDTH``
      The maximum acceptable filter image width.
   
   ``GL_MAX_CONVOLUTION_HEIGHT``
      The maximum acceptable filter image height.
   

**Errors:**

   * ``GL_INVALID_ENUM`` is generated if *target* is not one of the allowable values.
   * ``GL_INVALID_ENUM`` is generated if *pname* is not one of the allowable values.
   * ``GL_INVALID_ENUM`` is generated if *target* is ``GL_CONVOLUTION_1D`` and *pname* is ``GL_CONVOLUTION_HEIGHT`` or ``GL_MAX_CONVOLUTION_HEIGHT``.
   * ``GL_INVALID_OPERATION`` is generated if :c:func:`glGetConvolutionParameter` is executed between the execution of :c:func:`glBegin` and the corresponding execution of :c:func:`glEnd`.


.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

