.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glScissor`
--------------------

.. source file man4/glScissor

.. currentmodule:: OpenGL.GL

Define the scissor box

.. c:function:: glScissor
.. c:function:: void glScissor(GLint  x, GLint  y, GLsizei  width, GLsizei  height)
   :noindex: 


   
   :param x:
      Specify the lower left corner of the scissor box. Initially (0, 0).
   
   :param width:
      Specify the width and height of the scissor box. When a GL context is first attached to a window, *width* and *height* are set to the dimensions of that window.
   

.. seealso::

   
   :c:func:`glEnable`, :c:func:`glViewport`
   
.. rubric:: Description


:c:func:`glScissor` defines a rectangle, called the scissor box, in window coordinates. The first two arguments, *x* and *y* , specify the lower left corner of the box. *width* and *height* specify the width and height of the box.

To enable and disable the scissor test, call :c:func:`glEnable` and :c:func:`glDisable` with argument ``GL_SCISSOR_TEST``. The test is initially disabled. While the test is enabled, only pixels that lie within the scissor box can be modified by drawing commands. Window coordinates have integer values at the shared corners of frame buffer pixels. ``glScissor(0,0,1,1)`` allows modification of only the lower left pixel in the window, and ``glScissor(0,0,0,0)`` doesn't allow modification of any pixels in the window.

When the scissor test is disabled, it is as though the scissor box includes the entire window.


**Associated gets:**


   * :c:func:`glGet` with argument ``GL_SCISSOR_BOX``
   * :c:func:`glIsEnabled` with argument ``GL_SCISSOR_TEST``

**Errors:**

   * ``GL_INVALID_VALUE`` is generated if either *width* or *height* is negative.


.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

