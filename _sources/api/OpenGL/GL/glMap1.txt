.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glMap1`
-----------------

.. source file man/glMap1

.. currentmodule:: OpenGL.GL

Define a one-dimensional evaluator

.. c:function:: glMap1
.. c:function:: void glMap1f(GLenum  target, GLfloat  u1, GLfloat  u2, GLint  stride, GLint  order, const GLfloat *  points, GLenum  target, GLdouble  u1, GLdouble  u2, GLint  stride, GLint  order, const GLdouble *  points)


   
   :param target:
      Specifies the kind of values that are generated by the evaluator. Symbolic constants ``GL_MAP1_VERTEX_3``, ``GL_MAP1_VERTEX_4``, ``GL_MAP1_INDEX``, ``GL_MAP1_COLOR_4``, ``GL_MAP1_NORMAL``, ``GL_MAP1_TEXTURE_COORD_1``, ``GL_MAP1_TEXTURE_COORD_2``, ``GL_MAP1_TEXTURE_COORD_3``, and ``GL_MAP1_TEXTURE_COORD_4`` are accepted.
   
   :param u1:
      Specify a linear mapping of |EQUATION_1_| , as presented to :c:func:`glEvalCoord1`, to |EQUATION_2_| , the variable that is evaluated by the equations specified by this command.
   
   :param stride:
      Specifies the number of floats or doubles between the beginning of one control point and the beginning of the next one in the data structure referenced in *points* . This allows control points to be embedded in arbitrary data structures. The only constraint is that the values for a particular control point must occupy contiguous memory locations.
   
   :param order:
      Specifies the number of control points. Must be positive.
   
   :param points:
      Specifies a pointer to the array of control points.
   

.. seealso::

   
   :c:func:`glBegin`, :c:func:`glColor`, :c:func:`glEnable`, :c:func:`glEvalCoord`, :c:func:`glEvalMesh`, :c:func:`glEvalPoint`, :c:func:`glMap2`, :c:func:`glMapGrid`, :c:func:`glNormal`, :c:func:`glTexCoord`, :c:func:`glVertex`
   
.. rubric:: Description


Evaluators provide a way to use polynomial or rational polynomial mapping to produce vertices, normals, texture coordinates, and colors. The values produced by an evaluator are sent to further stages of GL processing just as if they had been presented using :c:func:`glVertex`, :c:func:`glNormal`, :c:func:`glTexCoord`, and :c:func:`glColor` commands, except that the generated values do not update the current normal, texture coordinates, or color.

All polynomial or rational polynomial splines of any degree (up to the maximum degree supported by the GL implementation) can be described using evaluators. These include almost all splines used in computer graphics: B-splines, Bezier curves, Hermite splines, and so on.

Evaluators define curves based on Bernstein polynomials. Define |EQUATION_3_| as

|EQUATION_4_|



where |EQUATION_5_| is a control point and |EQUATION_6_| is the |EQUATION_7_| th Bernstein polynomial of degree |EQUATION_8_| ( *order* = |EQUATION_9_| ):

|EQUATION_10_|

Recall that

|EQUATION_11_| and |EQUATION_12_|

:c:func:`glMap1` is used to define the basis and to specify what kind of values are produced. Once defined, a map can be enabled and disabled by calling :c:func:`glEnable` and :c:func:`glDisable` with the map name, one of the nine predefined values for *target* described below. :c:func:`glEvalCoord1` evaluates the one-dimensional maps that are enabled. When :c:func:`glEvalCoord1` presents a value |EQUATION_13_| , the Bernstein functions are evaluated using |EQUATION_14_| , where |EQUATION_15_|

*target* is a symbolic constant that indicates what kind of control points are provided in *points* , and what output is generated when the map is evaluated. It can assume one of nine predefined values:


   
   ``GL_MAP1_VERTEX_3``
      Each control point is three floating-point values representing |EQUATION_16_| , |EQUATION_17_| , and |EQUATION_18_| . Internal :c:func:`glVertex3` commands are generated when the map is evaluated.
   
   ``GL_MAP1_VERTEX_4``
      Each control point is four floating-point values representing |EQUATION_19_| , |EQUATION_20_| , |EQUATION_21_| , and |EQUATION_22_| . Internal :c:func:`glVertex4` commands are generated when the map is evaluated.
   
   ``GL_MAP1_INDEX``
      Each control point is a single floating-point value representing a color index. Internal :c:func:`glIndex` commands are generated when the map is evaluated but the current index is not updated with the value of these :c:func:`glIndex` commands.
   
   ``GL_MAP1_COLOR_4``
      Each control point is four floating-point values representing red, green, blue, and alpha. Internal :c:func:`glColor4` commands are generated when the map is evaluated but the current color is not updated with the value of these :c:func:`glColor4` commands.
   
   ``GL_MAP1_NORMAL``
      Each control point is three floating-point values representing the |EQUATION_23_| , |EQUATION_24_| , and |EQUATION_25_| components of a normal vector. Internal :c:func:`glNormal` commands are generated when the map is evaluated but the current normal is not updated with the value of these :c:func:`glNormal` commands.
   
   ``GL_MAP1_TEXTURE_COORD_1``
      Each control point is a single floating-point value representing the |EQUATION_26_| texture coordinate. Internal :c:func:`glTexCoord1` commands are generated when the map is evaluated but the current texture coordinates are not updated with the value of these :c:func:`glTexCoord` commands.
   
   ``GL_MAP1_TEXTURE_COORD_2``
      Each control point is two floating-point values representing the |EQUATION_27_| and |EQUATION_28_| texture coordinates. Internal :c:func:`glTexCoord2` commands are generated when the map is evaluated but the current texture coordinates are not updated with the value of these :c:func:`glTexCoord` commands.
   
   ``GL_MAP1_TEXTURE_COORD_3``
      Each control point is three floating-point values representing the |EQUATION_29_| , |EQUATION_30_| , and |EQUATION_31_| texture coordinates. Internal :c:func:`glTexCoord3` commands are generated when the map is evaluated but the current texture coordinates are not updated with the value of these :c:func:`glTexCoord` commands.
   
   ``GL_MAP1_TEXTURE_COORD_4``
      Each control point is four floating-point values representing the |EQUATION_32_| , |EQUATION_33_| , |EQUATION_34_| , and |EQUATION_35_| texture coordinates. Internal :c:func:`glTexCoord4` commands are generated when the map is evaluated but the current texture coordinates are not updated with the value of these :c:func:`glTexCoord` commands.
   
*stride* , *order* , and *points* define the array addressing for accessing the control points. *points* is the location of the first control point, which occupies one, two, three, or four contiguous memory locations, depending on which map is being defined. *order* is the number of control points in the array. *stride* specifies how many float or double locations to advance the internal memory pointer to reach the next control point.


**Associated gets:**


   * :c:func:`glGetMap`
   * :c:func:`glGet` with argument ``GL_MAX_EVAL_ORDER``
   * :c:func:`glIsEnabled` with argument ``GL_MAP1_VERTEX_3``
   * :c:func:`glIsEnabled` with argument ``GL_MAP1_VERTEX_4``
   * :c:func:`glIsEnabled` with argument ``GL_MAP1_INDEX``
   * :c:func:`glIsEnabled` with argument ``GL_MAP1_COLOR_4``
   * :c:func:`glIsEnabled` with argument ``GL_MAP1_NORMAL``
   * :c:func:`glIsEnabled` with argument ``GL_MAP1_TEXTURE_COORD_1``
   * :c:func:`glIsEnabled` with argument ``GL_MAP1_TEXTURE_COORD_2``
   * :c:func:`glIsEnabled` with argument ``GL_MAP1_TEXTURE_COORD_3``
   * :c:func:`glIsEnabled` with argument ``GL_MAP1_TEXTURE_COORD_4``

**Errors:**

   * ``GL_INVALID_ENUM`` is generated if *target* is not an accepted value.
   * ``GL_INVALID_VALUE`` is generated if *u1* is equal to *u2* .
   * ``GL_INVALID_VALUE`` is generated if *stride* is less than the number of values in a control point.
   * ``GL_INVALID_VALUE`` is generated if *order* is less than 1 or greater than the return value of ``GL_MAX_EVAL_ORDER``.
   * ``GL_INVALID_OPERATION`` is generated if :c:func:`glMap1` is executed between the execution of :c:func:`glBegin` and the corresponding execution of :c:func:`glEnd`.
   * ``GL_INVALID_OPERATION`` is generated if :c:func:`glMap1` is called and the value of ``GL_ACTIVE_TEXTURE`` is not ``GL_TEXTURE0``.



.. note::

   * As is the case with all GL commands that accept pointers to data, it is as if the contents of *points* were copied by :c:func:`glMap1` before :c:func:`glMap1` returns. Changes to the contents of *points* have no effect after :c:func:`glMap1` is called.



.. role:: mml(raw)
   :format: html



.. |EQUATION_10_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <mrow> <msup><mfenced open="" close=""> <msub><mi mathvariant="italic">B</mi> <mi mathvariant="italic">i</mi> </msub> </mfenced> <mi mathvariant="italic">n</mi> </msup> <mo>&af;</mo> <mfenced open="(" close=")"> <mover><mi mathvariant="italic">u</mi><mo>&Hat;</mo></mover> </mfenced> </mrow> <mo>=</mo> <mrow> <mfenced open="(" close=")"> <mfenced open="" close=""> <mtable> <mtr><mtd> <mi mathvariant="italic">n</mi> </mtd></mtr> <mtr><mtd> <mi mathvariant="italic">i</mi> </mtd></mtr> </mtable> </mfenced> </mfenced> <mo>&it;</mo> <msup><mfenced open="" close=""> <mover><mi mathvariant="italic">u</mi><mo>&Hat;</mo></mover> </mfenced> <mi mathvariant="italic">i</mi> </msup> <mo>&it;</mo> <mfenced open="" close=""> <msup><mfenced open="(" close=")"> <mrow> <mn>1</mn> <mo>-</mo> <mover><mi mathvariant="italic">u</mi><mo>&Hat;</mo></mover> </mrow> </mfenced> <mfenced open="" close=""> <mrow> <mi mathvariant="italic">n</mi> <mo>-</mo> <mi mathvariant="italic">i</mi> </mrow> </mfenced> </msup> </mfenced> </mrow> </mrow> </math>` 

.. |EQUATION_11_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <msup><mn>0</mn> <mn>0</mn> </msup> <mo>==</mo> <mn>1</mn> </mrow> </math>` 

.. |EQUATION_12_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <mfenced open="(" close=")"> <mfenced open="" close=""> <mtable> <mtr><mtd> <mi mathvariant="italic">n</mi> </mtd></mtr> <mtr><mtd> <mn>0</mn> </mtd></mtr> </mtable> </mfenced> </mfenced> <mo>==</mo> <mn>1</mn> </mrow> </math>` 

.. |EQUATION_13_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">u</mi></math>` 

.. |EQUATION_14_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mover><mi mathvariant="italic">u</mi><mo>&Hat;</mo></mover> </math>` 

.. |EQUATION_15_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <mover><mi mathvariant="italic">u</mi><mo>&Hat;</mo></mover> <mo>=</mo> <mfrac> <mfenced open="" close=""> <mrow> <mi mathvariant="italic">u</mi> <mo>-</mo> <mi mathvariant="italic">u1</mi> </mrow> </mfenced> <mfenced open="" close=""> <mrow> <mi mathvariant="italic">u2</mi> <mo>-</mo> <mi mathvariant="italic">u1</mi> </mrow> </mfenced> </mfrac> </mrow> </math>` 

.. |EQUATION_16_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">x</mi></math>` 

.. |EQUATION_17_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">y</mi></math>` 

.. |EQUATION_18_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">z</mi></math>` 

.. |EQUATION_19_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">x</mi></math>` 

.. |EQUATION_1_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">u</mi></math>` 

.. |EQUATION_20_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">y</mi></math>` 

.. |EQUATION_21_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">z</mi></math>` 

.. |EQUATION_22_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">w</mi></math>` 

.. |EQUATION_23_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">x</mi></math>` 

.. |EQUATION_24_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">y</mi></math>` 

.. |EQUATION_25_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">z</mi></math>` 

.. |EQUATION_26_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_27_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_28_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">t</mi></math>` 

.. |EQUATION_29_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_2_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mover><mi mathvariant="italic">u</mi><mo>&Hat;</mo></mover> </math>` 

.. |EQUATION_30_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">t</mi></math>` 

.. |EQUATION_31_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_32_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">s</mi></math>` 

.. |EQUATION_33_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">t</mi></math>` 

.. |EQUATION_34_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">r</mi></math>` 

.. |EQUATION_35_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">q</mi></math>` 

.. |EQUATION_3_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <mi mathvariant="italic">p</mi> <mo>&af;</mo> <mfenced open="(" close=")"> <mover><mi mathvariant="italic">u</mi><mo>&Hat;</mo></mover> </mfenced> </mrow> </math>` 

.. |EQUATION_4_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <mrow> <mi mathvariant="italic">p</mi> <mo>&af;</mo> <mfenced open="(" close=")"> <mover><mi mathvariant="italic">u</mi><mo>&Hat;</mo></mover> </mfenced> </mrow> <mo>=</mo> <mrow> <munderover> <mo>&Sigma;</mo> <mrow> <mi mathvariant="italic">i</mi> <mo>=</mo> <mn>0</mn> </mrow> <mi mathvariant="italic">n</mi> </munderover> <mrow> <mrow> <msup><mfenced open="" close=""> <msub><mi mathvariant="italic">B</mi> <mi mathvariant="italic">i</mi> </msub> </mfenced> <mi mathvariant="italic">n</mi> </msup> <mo>&af;</mo> <mfenced open="(" close=")"> <mover><mi mathvariant="italic">u</mi><mo>&Hat;</mo></mover> </mfenced> </mrow> <mo>&it;</mo> <msub><mi mathvariant="italic">R</mi> <mi mathvariant="italic">i</mi> </msub> </mrow> </mrow> </mrow> </math>` 

.. |EQUATION_5_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <msub><mi mathvariant="italic">R</mi> <mi mathvariant="italic">i</mi> </msub> </math>` 

.. |EQUATION_6_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <msup><mfenced open="" close=""> <msub><mi mathvariant="italic">B</mi> <mi mathvariant="italic">i</mi> </msub> </mfenced> <mi mathvariant="italic">n</mi> </msup> <mo>&af;</mo> <mfenced open="(" close=")"> <mover><mi mathvariant="italic">u</mi><mo>&Hat;</mo></mover> </mfenced> </mrow> </math>` 

.. |EQUATION_7_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">i</mi></math>` 

.. |EQUATION_8_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'><mi mathvariant="italic">n</mi></math>` 

.. |EQUATION_9_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <mi mathvariant="italic">n</mi> <mo>+</mo> <mn>1</mn> </mrow> </math>` 

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

