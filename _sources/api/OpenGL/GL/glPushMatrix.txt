.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glPushMatrix`
-----------------------

.. source file man/glPushMatrix

.. currentmodule:: OpenGL.GL

Push and pop the current matrix stack

.. c:function:: glPushMatrix
.. c:function:: void glPushMatrix(  void)
   :noindex: 
.. c:function:: void glPopMatrix(  void)

.. seealso::

   
   :c:func:`glFrustum`, :c:func:`glLoadIdentity`, :c:func:`glLoadMatrix`, :c:func:`glLoadTransposeMatrix`, :c:func:`glMatrixMode`, :c:func:`glMultMatrix`, :c:func:`glMultTransposeMatrix`, :c:func:`glOrtho`, :c:func:`glRotate`, :c:func:`glScale`, :c:func:`glTranslate`, :c:func:`glViewport`
   
.. rubric:: Description


There is a stack of matrices for each of the matrix modes. In ``GL_MODELVIEW`` mode, the stack depth is at least 32. In the other modes, ``GL_COLOR``, ``GL_PROJECTION``, and ``GL_TEXTURE``, the depth is at least 2. The current matrix in any mode is the matrix on the top of the stack for that mode.

:c:func:`glPushMatrix` pushes the current matrix stack down by one, duplicating the current matrix. That is, after a :c:func:`glPushMatrix` call, the matrix on top of the stack is identical to the one below it.

:c:func:`glPopMatrix` pops the current matrix stack, replacing the current matrix with the one below it on the stack.

Initially, each of the stacks contains one matrix, an identity matrix.

It is an error to push a full matrix stack or to pop a matrix stack that contains only a single matrix. In either case, the error flag is set and no other change is made to GL state.


**Associated gets:**


   * :c:func:`glGet` with argument ``GL_MATRIX_MODE``
   * :c:func:`glGet` with argument ``GL_COLOR_MATRIX``
   * :c:func:`glGet` with argument ``GL_MODELVIEW_MATRIX``
   * :c:func:`glGet` with argument ``GL_PROJECTION_MATRIX``
   * :c:func:`glGet` with argument ``GL_TEXTURE_MATRIX``
   * :c:func:`glGet` with argument ``GL_COLOR_MATRIX_STACK_DEPTH``
   * :c:func:`glGet` with argument ``GL_MODELVIEW_STACK_DEPTH``
   * :c:func:`glGet` with argument ``GL_PROJECTION_STACK_DEPTH``
   * :c:func:`glGet` with argument ``GL_TEXTURE_STACK_DEPTH``
   * :c:func:`glGet` with argument ``GL_MAX_MODELVIEW_STACK_DEPTH``
   * :c:func:`glGet` with argument ``GL_MAX_PROJECTION_STACK_DEPTH``
   * :c:func:`glGet` with argument ``GL_MAX_TEXTURE_STACK_DEPTH``

**Errors:**

   * ``GL_STACK_OVERFLOW`` is generated if :c:func:`glPushMatrix` is called while the current matrix stack is full.
   * ``GL_STACK_UNDERFLOW`` is generated if :c:func:`glPopMatrix` is called while the current matrix stack contains only a single matrix.
   * ``GL_INVALID_OPERATION`` is generated if :c:func:`glPushMatrix` or :c:func:`glPopMatrix` is executed between the execution of :c:func:`glBegin` and the corresponding execution of :c:func:`glEnd`.


.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

