.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glColorSubTable`
--------------------------

.. source file man/glColorSubTable

.. currentmodule:: OpenGL.GL

Respecify a portion of a color table

.. c:function:: glColorSubTable
.. c:function:: void glColorSubTable(GLenum  target, GLsizei  start, GLsizei  count, GLenum  format, GLenum  type, const GLvoid *  data)
   :noindex: 


   
   :param target:
      Must be one of ``GL_COLOR_TABLE``, ``GL_POST_CONVOLUTION_COLOR_TABLE``, or ``GL_POST_COLOR_MATRIX_COLOR_TABLE``.
   
   :param start:
      The starting index of the portion of the color table to be replaced.
   
   :param count:
      The number of table entries to replace.
   
   :param format:
      The format of the pixel data in *data* . The allowable values are ``GL_RED``, ``GL_GREEN``, ``GL_BLUE``, ``GL_ALPHA``, ``GL_LUMINANCE``, ``GL_LUMINANCE_ALPHA``, ``GL_RGB``, ``GL_BGR``, ``GL_RGBA``, and ``GL_BGRA``.
   
   :param type:
      The type of the pixel data in *data* . The allowable values are ``GL_UNSIGNED_BYTE``, ``GL_BYTE``, ``GL_UNSIGNED_SHORT``, ``GL_SHORT``, ``GL_UNSIGNED_INT``, ``GL_INT``, ``GL_FLOAT``, ``GL_UNSIGNED_BYTE_3_3_2``, ``GL_UNSIGNED_BYTE_2_3_3_REV``, ``GL_UNSIGNED_SHORT_5_6_5``, ``GL_UNSIGNED_SHORT_5_6_5_REV``, ``GL_UNSIGNED_SHORT_4_4_4_4``, ``GL_UNSIGNED_SHORT_4_4_4_4_REV``, ``GL_UNSIGNED_SHORT_5_5_5_1``, ``GL_UNSIGNED_SHORT_1_5_5_5_REV``, ``GL_UNSIGNED_INT_8_8_8_8``, ``GL_UNSIGNED_INT_8_8_8_8_REV``, ``GL_UNSIGNED_INT_10_10_10_2``, and ``GL_UNSIGNED_INT_2_10_10_10_REV``.
   
   :param data:
      Pointer to a one-dimensional array of pixel data that is processed to replace the specified region of the color table.
   

.. seealso::

   
   :c:func:`glColorTable`, :c:func:`glColorTableParameter`, :c:func:`glCopyColorTable`, :c:func:`glCopyColorSubTable`, :c:func:`glGetColorTable`
   
.. rubric:: Description


:c:func:`glColorSubTable` is used to respecify a contiguous portion of a color table previously defined using :c:func:`glColorTable`. The pixels referenced by *data* replace the portion of the existing table from indices *start* to |EQUATION_1_| , inclusive. This region may not include any entries outside the range of the color table as it was originally specified. It is not an error to specify a subtexture with width of 0, but such a specification has no effect.

If a non-zero named buffer object is bound to the ``GL_PIXEL_UNPACK_BUFFER`` target (see :c:func:`glBindBuffer`) while a portion of a color table is respecified, *data* is treated as a byte offset into the buffer object's data store.


**Associated gets:**


   * :c:func:`glGetColorTable`, :c:func:`glGetColorTableParameter`
   * :c:func:`glGet` with argument ``GL_PIXEL_UNPACK_BUFFER_BINDING``

**Errors:**

   * ``GL_INVALID_ENUM`` is generated if *target* is not one of the allowable values.
   * ``GL_INVALID_ENUM`` is generated if *format* is not one of the allowable values.
   * ``GL_INVALID_ENUM`` is generated if *type* is not one of the allowable values.
   * ``GL_INVALID_VALUE`` is generated if |EQUATION_2_| .
   * ``GL_INVALID_OPERATION`` is generated if a non-zero buffer object name is bound to the ``GL_PIXEL_UNPACK_BUFFER`` target and the buffer object's data store is currently mapped.
   * ``GL_INVALID_OPERATION`` is generated if a non-zero buffer object name is bound to the ``GL_PIXEL_UNPACK_BUFFER`` target and the data would be unpacked from the buffer object such that the memory reads required would exceed the data store size.
   * ``GL_INVALID_OPERATION`` is generated if a non-zero buffer object name is bound to the ``GL_PIXEL_UNPACK_BUFFER`` target and *data* is not evenly divisible into the number of bytes needed to store in memory a datum indicated by *type* .
   * ``GL_INVALID_OPERATION`` is generated if :c:func:`glColorSubTable` is executed between the execution of :c:func:`glBegin` and the corresponding execution of :c:func:`glEnd`.



.. note::

   * :c:func:`glColorSubTable` is present only if ``ARB_imaging`` is returned when :c:func:`glGetString` is called with an argument of ``GL_EXTENSIONS``.



.. role:: mml(raw)
   :format: html



.. |EQUATION_1_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <mi mathvariant="italic">start</mi> <mo>+</mo> <mi mathvariant="italic">count</mi> <mo>-</mo> <mn>1</mn> </mrow> </math>` 

.. |EQUATION_2_| replace::  :mml:`<math xmlns='http://www.w3.org/1998/Math/MathML'> <mrow> <mrow> <mi mathvariant="italic">start</mi> <mo>+</mo> <mi mathvariant="italic">count</mi> </mrow> <mo>&gt;</mo> <mi mathvariant="italic">width</mi> </mrow> </math>` 

.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

