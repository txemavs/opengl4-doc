.. nabla.opengl-sphinx project at code.google.com

.. license http://opencontent.org/openpub/

function `glScissorArray`
-------------------------

.. source file man4/glScissorArray

.. currentmodule:: OpenGL.GL

Define the scissor box for multiple viewports

.. c:function:: glScissorArray
.. c:function:: void glScissorArrayv(GLuint  first, GLsizei  count, const GLint * v)


   
   :param first:
      Specifies the index of the first viewport whose scissor box to modify.
   
   :param count:
      Specifies the number of scissor boxes to modify.
   
   :param v:
      Specifies the address of an array containing the left, bottom, width and height of each scissor box, in that order.
   

.. seealso::

   
   :c:func:`glEnable`, :c:func:`glViewport`, :c:func:`glViewportIndexed`, :c:func:`glViewportArray`
   
.. rubric:: Description


:c:func:`glScissorArrayv` defines rectangles, called scissor boxes, in window coordinates for each viewport. *first* specifies the index of the first scissor box to modify and *count* specifies the number of scissor boxes to modify. *first* must be less than the value of ``GL_MAX_VIEWPORTS``, and *first* + *count* must be less than or equal to the value of ``GL_MAX_VIEWPORTS``. *v* specifies the address of an array containing integers specifying the lower left corner of the scissor boxes, and the width and height of the scissor boxes, in that order.

To enable and disable the scissor test, call :c:func:`glEnable` and :c:func:`glDisable` with argument ``GL_SCISSOR_TEST``. The test is initially disabled for all viewports. While the test is enabled, only pixels that lie within the scissor box can be modified by drawing commands. Window coordinates have integer values at the shared corners of frame buffer pixels. ``glScissor(0,0,1,1)`` allows modification of only the lower left pixel in the window, and ``glScissor(0,0,0,0)`` doesn't allow modification of any pixels in the window.

When the scissor test is disabled, it is as though the scissor box includes the entire window.


**Associated gets:**


   * :c:func:`glGet` with argument ``GL_SCISSOR_BOX``
   * :c:func:`glIsEnabled` with argument ``GL_SCISSOR_TEST``

**Errors:**

   * ``GL_INVALID_VALUE`` is generated if *first* is greater than or equal to the value of ``GL_MAX_VIEWPORTS``.
   * ``GL_INVALID_VALUE`` is generated if *first* + *count* is greater than or equal to the value of ``GL_MAX_VIEWPORTS``.
   * ``GL_INVALID_VALUE`` is generated if any width or height specified in the array *v* is negative.


.. figure:: /_static/opengl.png
   :alt: OpenGL
   :align: right

   (c)2009 Khronos Group.

